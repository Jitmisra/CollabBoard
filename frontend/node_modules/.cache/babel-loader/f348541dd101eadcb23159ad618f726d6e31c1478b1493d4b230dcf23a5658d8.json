{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { exportCanvasAsPNG, generateTimestampedFilename } from '../utils/export';\nimport CursorTracker from './CursorTracker';\nimport StickyNotes from './StickyNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  socket,\n  roomId,\n  initialData,\n  showToast\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTool, setCurrentTool] = useState('pen');\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [currentSize, setCurrentSize] = useState(3);\n  const [isErasing, setIsErasing] = useState(false);\n  const [shapes, setShapes] = useState([]);\n  const [isDrawingShape, setIsDrawingShape] = useState(false);\n  const [shapeStart, setShapeStart] = useState(null);\n  const [drawingData, setDrawingData] = useState([]);\n\n  // Drawing state\n  const lastPointRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Colors palette\n  const colors = ['#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF', '#FFA500', '#800080', '#FFC0CB', '#A52A2A', '#808080'];\n  const drawLine = useCallback((x0, y0, x1, y1, color, size) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = size;\n    ctx.lineCap = 'round';\n    ctx.stroke();\n  }, []);\n  const redrawCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Redraw all stored drawing data\n    drawingData.forEach(data => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n      }\n    });\n  }, [drawingData, drawLine]);\n\n  // Initialize canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      const container = canvas.parentElement;\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n\n      // Redraw existing content\n      redrawCanvas();\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, [redrawCanvas]);\n\n  // Load initial data\n  useEffect(() => {\n    if (initialData && initialData.length > 0) {\n      setDrawingData(initialData);\n    }\n  }, [initialData]);\n\n  // Socket event listeners\n  useEffect(() => {\n    if (!socket) return;\n    const handleDrawing = data => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n        setDrawingData(prev => [...prev, data]);\n      } else if (data.type === 'clear') {\n        clearCanvas();\n        setDrawingData([]);\n      }\n    };\n    const handleClearWhiteboard = () => {\n      clearCanvas();\n      setDrawingData([]);\n    };\n    socket.on('drawing', handleDrawing);\n    socket.on('clear-whiteboard', handleClearWhiteboard);\n    return () => {\n      socket.off('drawing', handleDrawing);\n      socket.off('clear-whiteboard', handleClearWhiteboard);\n    };\n  }, [socket, drawLine]);\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  const getTouchPos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.touches[0].clientX - rect.left,\n      y: e.touches[0].clientY - rect.top\n    };\n  };\n\n  // Mouse events\n  const handleMouseDown = e => {\n    if (currentTool !== 'pen') return;\n    setIsDrawing(true);\n    const pos = getMousePos(e);\n    lastPointRef.current = pos;\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing || currentTool !== 'pen') return;\n    const pos = getMousePos(e);\n    const lastPoint = lastPointRef.current;\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n    lastPointRef.current = pos;\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    if (currentTool !== 'pen') return;\n    setIsDrawing(true);\n    const pos = getTouchPos(e);\n    lastPointRef.current = pos;\n  };\n  const handleTouchMove = e => {\n    if (!isDrawing || currentTool !== 'pen') return;\n    const pos = getTouchPos(e);\n    const lastPoint = lastPointRef.current;\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n    lastPointRef.current = pos;\n  };\n  const handleTouchEnd = e => {\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n  const handleClear = () => {\n    if (window.confirm('Are you sure you want to clear the whiteboard?')) {\n      clearCanvas();\n      setDrawingData([]);\n      socket.emit('clear-whiteboard');\n      showToast('Whiteboard cleared', 'info');\n    }\n  };\n  const handleExport = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const filename = generateTimestampedFilename(`whiteboard_${roomId}`, 'png');\n    const success = exportCanvasAsPNG(canvas, filename);\n    if (success) {\n      showToast('Whiteboard exported successfully!', 'success');\n    } else {\n      showToast('Failed to export whiteboard', 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentTool('pen');\n              setIsErasing(false);\n            },\n            className: `p-2 rounded-lg transition-colors ${currentTool === 'pen' && !isErasing ? 'bg-primary-600 text-white' : 'bg-white text-gray-600 hover:bg-gray-100'}`,\n            title: \"Pen Tool\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentTool('eraser');\n              setIsErasing(true);\n            },\n            className: `p-2 rounded-lg transition-colors ${currentTool === 'eraser' ? 'bg-red-600 text-white' : 'bg-white text-gray-600 hover:bg-gray-100'}`,\n            title: \"Eraser Tool\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentTool('rectangle');\n              setIsErasing(false);\n            },\n            className: `p-2 rounded-lg transition-colors ${currentTool === 'rectangle' ? 'bg-primary-600 text-white' : 'bg-white text-gray-600 hover:bg-gray-100'}`,\n            title: \"Rectangle Tool\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"3\",\n                y: \"3\",\n                width: \"18\",\n                height: \"18\",\n                rx: \"2\",\n                ry: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentTool('circle');\n              setIsErasing(false);\n            },\n            className: `p-2 rounded-lg transition-colors ${currentTool === 'circle' ? 'bg-primary-600 text-white' : 'bg-white text-gray-600 hover:bg-gray-100'}`,\n            title: \"Circle Tool\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentColor(color),\n            className: `w-8 h-8 rounded-full border-2 transition-all ${currentColor === color ? 'border-gray-800 scale-110' : 'border-gray-300 hover:scale-105'}`,\n            style: {\n              backgroundColor: color\n            },\n            title: `Color: ${color}`\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: currentColor,\n            onChange: e => setCurrentColor(e.target.value),\n            className: \"w-8 h-8 rounded-full border-2 border-gray-300 cursor-pointer\",\n            title: \"Custom Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: currentSize,\n            onChange: e => setCurrentSize(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 w-6\",\n            children: currentSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          className: \"btn-secondary flex items-center\",\n          title: \"Export as PNG\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4 mr-2\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), \"Export\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClear,\n          className: \"btn-danger flex items-center\",\n          title: \"Clear whiteboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4 mr-2\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), \"Clear\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-hidden canvas-container relative\",\n      ref: containerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"w-full h-full cursor-crosshair\",\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CursorTracker, {\n        socket: socket,\n        roomId: roomId,\n        currentUser: {\n          username: 'Current User'\n        },\n        containerRef: containerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StickyNotes, {\n        socket: socket,\n        roomId: roomId,\n        containerRef: containerRef,\n        showToast: showToast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 text-center\",\n        children: \"Click and drag to draw \\u2022 Use toolbar to change colors and brush size \\u2022 Changes are saved automatically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"F/HazI7atAwolnuH7P9C/YTh15Q=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","exportCanvasAsPNG","generateTimestampedFilename","CursorTracker","StickyNotes","jsxDEV","_jsxDEV","Whiteboard","socket","roomId","initialData","showToast","_s","canvasRef","isDrawing","setIsDrawing","currentTool","setCurrentTool","currentColor","setCurrentColor","currentSize","setCurrentSize","isErasing","setIsErasing","shapes","setShapes","isDrawingShape","setIsDrawingShape","shapeStart","setShapeStart","drawingData","setDrawingData","lastPointRef","containerRef","colors","drawLine","x0","y0","x1","y1","color","size","canvas","current","ctx","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","redrawCanvas","clearRect","width","height","forEach","data","type","resizeCanvas","container","parentElement","clientWidth","clientHeight","window","addEventListener","removeEventListener","length","handleDrawing","prev","clearCanvas","handleClearWhiteboard","on","off","getMousePos","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","getTouchPos","touches","handleMouseDown","pos","handleMouseMove","lastPoint","drawData","emit","handleMouseUp","handleTouchStart","handleTouchMove","handleTouchEnd","handleClear","confirm","handleExport","filename","success","className","children","onClick","title","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","rx","ry","cx","cy","r","map","style","backgroundColor","value","onChange","target","min","max","parseInt","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","currentUser","username","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/Whiteboard.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { exportCanvasAsPNG, generateTimestampedFilename } from '../utils/export';\nimport CursorTracker from './CursorTracker';\nimport StickyNotes from './StickyNotes';\n\nconst Whiteboard = ({ socket, roomId, initialData, showToast }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTool, setCurrentTool] = useState('pen');\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [currentSize, setCurrentSize] = useState(3);\n  const [isErasing, setIsErasing] = useState(false);\n  const [shapes, setShapes] = useState([]);\n  const [isDrawingShape, setIsDrawingShape] = useState(false);\n  const [shapeStart, setShapeStart] = useState(null);\n  const [drawingData, setDrawingData] = useState([]);\n\n  // Drawing state\n  const lastPointRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Colors palette\n  const colors = [\n    '#000000', '#FF0000', '#00FF00', '#0000FF',\n    '#FFFF00', '#FF00FF', '#00FFFF', '#FFA500',\n    '#800080', '#FFC0CB', '#A52A2A', '#808080'\n  ];\n\n  const drawLine = useCallback((x0, y0, x1, y1, color, size) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = size;\n    ctx.lineCap = 'round';\n    ctx.stroke();\n  }, []);\n\n  const redrawCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Redraw all stored drawing data\n    drawingData.forEach(data => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n      }\n    });\n  }, [drawingData, drawLine]);\n\n  // Initialize canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      const container = canvas.parentElement;\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n\n      // Redraw existing content\n      redrawCanvas();\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, [redrawCanvas]);\n\n  // Load initial data\n  useEffect(() => {\n    if (initialData && initialData.length > 0) {\n      setDrawingData(initialData);\n    }\n  }, [initialData]);\n\n  // Socket event listeners\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleDrawing = (data) => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n        setDrawingData(prev => [...prev, data]);\n      } else if (data.type === 'clear') {\n        clearCanvas();\n        setDrawingData([]);\n      }\n    };\n\n    const handleClearWhiteboard = () => {\n      clearCanvas();\n      setDrawingData([]);\n    };\n\n    socket.on('drawing', handleDrawing);\n    socket.on('clear-whiteboard', handleClearWhiteboard);\n\n    return () => {\n      socket.off('drawing', handleDrawing);\n      socket.off('clear-whiteboard', handleClearWhiteboard);\n    };\n  }, [socket, drawLine]);\n\n\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const getMousePos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n\n  const getTouchPos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.touches[0].clientX - rect.left,\n      y: e.touches[0].clientY - rect.top\n    };\n  };\n\n  // Mouse events\n  const handleMouseDown = (e) => {\n    if (currentTool !== 'pen') return;\n\n    setIsDrawing(true);\n    const pos = getMousePos(e);\n    lastPointRef.current = pos;\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing || currentTool !== 'pen') return;\n\n    const pos = getMousePos(e);\n    const lastPoint = lastPointRef.current;\n\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n\n    lastPointRef.current = pos;\n  };\n\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = (e) => {\n    if (currentTool !== 'pen') return;\n\n    setIsDrawing(true);\n    const pos = getTouchPos(e);\n    lastPointRef.current = pos;\n  };\n\n  const handleTouchMove = (e) => {\n    if (!isDrawing || currentTool !== 'pen') return;\n\n    const pos = getTouchPos(e);\n    const lastPoint = lastPointRef.current;\n\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n\n    lastPointRef.current = pos;\n  };\n\n  const handleTouchEnd = (e) => {\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n\n  const handleClear = () => {\n    if (window.confirm('Are you sure you want to clear the whiteboard?')) {\n      clearCanvas();\n      setDrawingData([]);\n      socket.emit('clear-whiteboard');\n      showToast('Whiteboard cleared', 'info');\n    }\n  };\n\n  const handleExport = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const filename = generateTimestampedFilename(`whiteboard_${roomId}`, 'png');\n    const success = exportCanvasAsPNG(canvas, filename);\n\n    if (success) {\n      showToast('Whiteboard exported successfully!', 'success');\n    } else {\n      showToast('Failed to export whiteboard', 'error');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white\">\n      {/* Toolbar */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50\">\n        {/* Drawing tools */}\n        <div className=\"flex items-center space-x-4\">\n          {/* Tool selector */}\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => { setCurrentTool('pen'); setIsErasing(false); }}\n              className={`p-2 rounded-lg transition-colors ${currentTool === 'pen' && !isErasing\n                ? 'bg-primary-600 text-white'\n                : 'bg-white text-gray-600 hover:bg-gray-100'\n                }`}\n              title=\"Pen Tool\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n              </svg>\n            </button>\n            \n            <button\n              onClick={() => { setCurrentTool('eraser'); setIsErasing(true); }}\n              className={`p-2 rounded-lg transition-colors ${currentTool === 'eraser'\n                ? 'bg-red-600 text-white'\n                : 'bg-white text-gray-600 hover:bg-gray-100'\n                }`}\n              title=\"Eraser Tool\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n              </svg>\n            </button>\n\n            <button\n              onClick={() => { setCurrentTool('rectangle'); setIsErasing(false); }}\n              className={`p-2 rounded-lg transition-colors ${currentTool === 'rectangle'\n                ? 'bg-primary-600 text-white'\n                : 'bg-white text-gray-600 hover:bg-gray-100'\n                }`}\n              title=\"Rectangle Tool\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n              </svg>\n            </button>\n\n            <button\n              onClick={() => { setCurrentTool('circle'); setIsErasing(false); }}\n              className={`p-2 rounded-lg transition-colors ${currentTool === 'circle'\n                ? 'bg-primary-600 text-white'\n                : 'bg-white text-gray-600 hover:bg-gray-100'\n                }`}\n              title=\"Circle Tool\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n              </svg>\n            </button>\n          </div>\n\n          {/* Color picker */}\n          <div className=\"flex items-center space-x-1\">\n            {colors.map(color => (\n              <button\n                key={color}\n                onClick={() => setCurrentColor(color)}\n                className={`w-8 h-8 rounded-full border-2 transition-all ${currentColor === color\n                  ? 'border-gray-800 scale-110'\n                  : 'border-gray-300 hover:scale-105'\n                  }`}\n                style={{ backgroundColor: color }}\n                title={`Color: ${color}`}\n              />\n            ))}\n\n            {/* Custom color picker */}\n            <input\n              type=\"color\"\n              value={currentColor}\n              onChange={(e) => setCurrentColor(e.target.value)}\n              className=\"w-8 h-8 rounded-full border-2 border-gray-300 cursor-pointer\"\n              title=\"Custom Color\"\n            />\n          </div>\n\n          {/* Brush size */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm text-gray-600\">Size:</label>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"20\"\n              value={currentSize}\n              onChange={(e) => setCurrentSize(parseInt(e.target.value))}\n              className=\"w-20\"\n            />\n            <span className=\"text-sm text-gray-600 w-6\">{currentSize}</span>\n          </div>\n        </div>\n\n        {/* Action buttons */}\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleExport}\n            className=\"btn-secondary flex items-center\"\n            title=\"Export as PNG\"\n          >\n            <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n            Export\n          </button>\n\n          <button\n            onClick={handleClear}\n            className=\"btn-danger flex items-center\"\n            title=\"Clear whiteboard\"\n          >\n            <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n            Clear\n          </button>\n        </div>\n      </div>\n\n      {/* Canvas */}\n      <div className=\"flex-1 overflow-hidden canvas-container relative\" ref={containerRef}>\n        <canvas\n          ref={canvasRef}\n          className=\"w-full h-full cursor-crosshair\"\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        />\n        \n        {/* Cursor Tracker */}\n        <CursorTracker \n          socket={socket} \n          roomId={roomId} \n          currentUser={{ username: 'Current User' }} \n          containerRef={containerRef} \n        />\n        \n        {/* Sticky Notes */}\n        <StickyNotes \n          socket={socket} \n          roomId={roomId} \n          containerRef={containerRef} \n          showToast={showToast} \n        />\n      </div>\n\n      {/* Instructions */}\n      <div className=\"p-2 bg-gray-50 border-t border-gray-200\">\n        <p className=\"text-xs text-gray-500 text-center\">\n          Click and drag to draw • Use toolbar to change colors and brush size • Changes are saved automatically\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Whiteboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}