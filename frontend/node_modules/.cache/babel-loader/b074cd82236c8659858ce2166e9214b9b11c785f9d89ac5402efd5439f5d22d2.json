{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await fetch(`${API_BASE_URL}/api/auth/verify`, {\n            headers: {\n              'Authorization': `Bearer ${storedToken}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setUser(data.user);\n            setToken(storedToken);\n          } else {\n            localStorage.removeItem('token');\n            setToken(null);\n          }\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const apiUrl = `${API_BASE_URL}/api/auth/login`;\n      console.log('üîç Login attempt - API URL:', apiUrl);\n      console.log('üîç Environment check:', {\n        NODE_ENV: process.env.NODE_ENV,\n        REACT_APP_API_BASE_URL: process.env.REACT_APP_API_BASE_URL,\n        REACT_APP_RAILWAY_URL: process.env.REACT_APP_RAILWAY_URL,\n        REACT_APP_DEV_URL: process.env.REACT_APP_DEV_URL,\n        API_BASE_URL: API_BASE_URL,\n        finalUrl: apiUrl\n      });\n      const requestBody = {\n        username,\n        password\n      };\n      console.log('üîç Request body:', {\n        ...requestBody,\n        password: '[HIDDEN]'\n      });\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log('üîç Response status:', response.status);\n      console.log('üîç Response headers:', Object.fromEntries(response.headers.entries()));\n      const data = await response.json();\n      console.log('üîç Response data:', data);\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('token', data.token);\n        return {\n          success: true,\n          message: data.message\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      console.error('‚ùå Login error details:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n        API_BASE_URL: API_BASE_URL,\n        fullUrl: `${API_BASE_URL}/api/auth/login`\n      });\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('token', data.token);\n        return {\n          success: true,\n          message: data.message\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/profile`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(profileData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        return {\n          success: true,\n          message: data.message\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    }\n  };\n  const getAuthHeaders = () => {\n    return token ? {\n      'Authorization': `Bearer ${token}`\n    } : {};\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    getAuthHeaders,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","storedToken","response","fetch","headers","ok","data","json","removeItem","error","console","login","username","password","apiUrl","log","NODE_ENV","process","env","REACT_APP_API_BASE_URL","REACT_APP_RAILWAY_URL","REACT_APP_DEV_URL","finalUrl","requestBody","method","body","JSON","stringify","status","Object","fromEntries","entries","setItem","success","message","name","stack","fullUrl","register","userData","logout","updateProfile","profileData","getAuthHeaders","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await fetch(`${API_BASE_URL}/api/auth/verify`, {\n            headers: {\n              'Authorization': `Bearer ${storedToken}`\n            }\n          });\n\n          if (response.ok) {\n            const data = await response.json();\n            setUser(data.user);\n            setToken(storedToken);\n          } else {\n            localStorage.removeItem('token');\n            setToken(null);\n          }\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const apiUrl = `${API_BASE_URL}/api/auth/login`;\n      console.log('üîç Login attempt - API URL:', apiUrl);\n      console.log('üîç Environment check:', {\n        NODE_ENV: process.env.NODE_ENV,\n        REACT_APP_API_BASE_URL: process.env.REACT_APP_API_BASE_URL,\n        REACT_APP_RAILWAY_URL: process.env.REACT_APP_RAILWAY_URL,\n        REACT_APP_DEV_URL: process.env.REACT_APP_DEV_URL,\n        API_BASE_URL: API_BASE_URL,\n        finalUrl: apiUrl\n      });\n\n      const requestBody = { username, password };\n      console.log('üîç Request body:', { ...requestBody, password: '[HIDDEN]' });\n\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n\n      console.log('üîç Response status:', response.status);\n      console.log('üîç Response headers:', Object.fromEntries(response.headers.entries()));\n\n      const data = await response.json();\n      console.log('üîç Response data:', data);\n\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('token', data.token);\n        return { success: true, message: data.message };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('‚ùå Login error details:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n        API_BASE_URL: API_BASE_URL,\n        fullUrl: `${API_BASE_URL}/api/auth/login`\n      });\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('token', data.token);\n        return { success: true, message: data.message };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/profile`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(profileData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.user);\n        return { success: true, message: data.message };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return { success: false, error: 'Network error. Please try again.' };\n    }\n  };\n\n  const getAuthHeaders = () => {\n    return token ? { 'Authorization': `Bearer ${token}` } : {};\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    getAuthHeaders,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEjE;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,WAAW,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,IAAIE,WAAW,EAAE;QACf,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGtB,YAAY,kBAAkB,EAAE;YAC9DuB,OAAO,EAAE;cACP,eAAe,EAAE,UAAUH,WAAW;YACxC;UACF,CAAC,CAAC;UAEF,IAAIC,QAAQ,CAACG,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;YAClCd,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;YAClBK,QAAQ,CAACI,WAAW,CAAC;UACvB,CAAC,MAAM;YACLH,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;YAChCX,QAAQ,CAAC,IAAI,CAAC;UAChB;QACF,CAAC,CAAC,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1CX,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;UAChCX,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF;MACAF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,MAAM,GAAG,GAAGjC,YAAY,iBAAiB;MAC/C6B,OAAO,CAACK,GAAG,CAAC,6BAA6B,EAAED,MAAM,CAAC;MAClDJ,OAAO,CAACK,GAAG,CAAC,uBAAuB,EAAE;QACnCC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACF,QAAQ;QAC9BG,sBAAsB,EAAEF,OAAO,CAACC,GAAG,CAACC,sBAAsB;QAC1DC,qBAAqB,EAAEH,OAAO,CAACC,GAAG,CAACE,qBAAqB;QACxDC,iBAAiB,EAAEJ,OAAO,CAACC,GAAG,CAACG,iBAAiB;QAChDxC,YAAY,EAAEA,YAAY;QAC1ByC,QAAQ,EAAER;MACZ,CAAC,CAAC;MAEF,MAAMS,WAAW,GAAG;QAAEX,QAAQ;QAAEC;MAAS,CAAC;MAC1CH,OAAO,CAACK,GAAG,CAAC,kBAAkB,EAAE;QAAE,GAAGQ,WAAW;QAAEV,QAAQ,EAAE;MAAW,CAAC,CAAC;MAEzE,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACW,MAAM,EAAE;QACnCU,MAAM,EAAE,MAAM;QACdpB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;MAClC,CAAC,CAAC;MAEFb,OAAO,CAACK,GAAG,CAAC,qBAAqB,EAAEb,QAAQ,CAAC0B,MAAM,CAAC;MACnDlB,OAAO,CAACK,GAAG,CAAC,sBAAsB,EAAEc,MAAM,CAACC,WAAW,CAAC5B,QAAQ,CAACE,OAAO,CAAC2B,OAAO,CAAC,CAAC,CAAC,CAAC;MAEnF,MAAMzB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCG,OAAO,CAACK,GAAG,CAAC,mBAAmB,EAAET,IAAI,CAAC;MAEtC,IAAIJ,QAAQ,CAACG,EAAE,EAAE;QACfZ,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;QAClBK,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;QACpBE,YAAY,CAACkC,OAAO,CAAC,OAAO,EAAE1B,IAAI,CAACV,KAAK,CAAC;QACzC,OAAO;UAAEqC,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE5B,IAAI,CAAC4B;QAAQ,CAAC;MACjD,CAAC,MAAM;QACL,OAAO;UAAED,OAAO,EAAE,KAAK;UAAExB,KAAK,EAAEH,IAAI,CAACG;QAAM,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAE;QACtC0B,IAAI,EAAE1B,KAAK,CAAC0B,IAAI;QAChBD,OAAO,EAAEzB,KAAK,CAACyB,OAAO;QACtBE,KAAK,EAAE3B,KAAK,CAAC2B,KAAK;QAClBvD,YAAY,EAAEA,YAAY;QAC1BwD,OAAO,EAAE,GAAGxD,YAAY;MAC1B,CAAC,CAAC;MACF,OAAO;QAAEoD,OAAO,EAAE,KAAK;QAAExB,KAAK,EAAE;MAAmC,CAAC;IACtE;EACF,CAAC;EAED,MAAM6B,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMrC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGtB,YAAY,oBAAoB,EAAE;QAChE2C,MAAM,EAAE,MAAM;QACdpB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACY,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMjC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACG,EAAE,EAAE;QACfZ,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;QAClBK,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;QACpBE,YAAY,CAACkC,OAAO,CAAC,OAAO,EAAE1B,IAAI,CAACV,KAAK,CAAC;QACzC,OAAO;UAAEqC,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE5B,IAAI,CAAC4B;QAAQ,CAAC;MACjD,CAAC,MAAM;QACL,OAAO;UAAED,OAAO,EAAE,KAAK;UAAExB,KAAK,EAAEH,IAAI,CAACG;QAAM,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO;QAAEwB,OAAO,EAAE,KAAK;QAAExB,KAAK,EAAE;MAAmC,CAAC;IACtE;EACF,CAAC;EAED,MAAM+B,MAAM,GAAGA,CAAA,KAAM;IACnB/C,OAAO,CAAC,IAAI,CAAC;IACbI,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMiC,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAMxC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGtB,YAAY,mBAAmB,EAAE;QAC/D2C,MAAM,EAAE,KAAK;QACbpB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUR,KAAK;QAClC,CAAC;QACD6B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACe,WAAW;MAClC,CAAC,CAAC;MAEF,MAAMpC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACG,EAAE,EAAE;QACfZ,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;QAClB,OAAO;UAAEyC,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE5B,IAAI,CAAC4B;QAAQ,CAAC;MACjD,CAAC,MAAM;QACL,OAAO;UAAED,OAAO,EAAE,KAAK;UAAExB,KAAK,EAAEH,IAAI,CAACG;QAAM,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO;QAAEwB,OAAO,EAAE,KAAK;QAAExB,KAAK,EAAE;MAAmC,CAAC;IACtE;EACF,CAAC;EAED,MAAMkC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAO/C,KAAK,GAAG;MAAE,eAAe,EAAE,UAAUA,KAAK;IAAG,CAAC,GAAG,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMgD,KAAK,GAAG;IACZpD,IAAI;IACJI,KAAK;IACLF,OAAO;IACPiB,KAAK;IACL2B,QAAQ;IACRE,MAAM;IACNC,aAAa;IACbE,cAAc;IACdE,eAAe,EAAE,CAAC,CAACrD;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC8D,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAtD,QAAA,EAChCA;EAAQ;IAAAyD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3D,GAAA,CArKWF,YAAY;AAAA8D,EAAA,GAAZ9D,YAAY;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}