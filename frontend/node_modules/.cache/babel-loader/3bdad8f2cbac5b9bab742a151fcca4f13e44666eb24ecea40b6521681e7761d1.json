{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/CollabBoard/frontend/src/components/ScreenShare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenShare = ({\n  socket,\n  roomId,\n  currentUser,\n  showToast\n}) => {\n  _s();\n  const [isSharing, setIsSharing] = useState(false);\n  const [isWatching, setIsWatching] = useState(false);\n  const [sharedScreen, setSharedScreen] = useState(null);\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  useEffect(() => {\n    if (!socket) return;\n\n    // Listen for screen share events\n    const handleScreenShareStart = data => {\n      if (data.username !== currentUser.username) {\n        setSharedScreen(data);\n        showToast(`ðŸ“º ${data.username} started screen sharing`, 'info');\n      }\n    };\n    const handleScreenShareStop = data => {\n      if (data.username !== currentUser.username) {\n        setSharedScreen(null);\n        setIsWatching(false);\n        showToast(`ðŸ“º ${data.username} stopped screen sharing`, 'info');\n      }\n    };\n    const handleScreenShareData = data => {\n      if (data.username !== currentUser.username && isWatching) {\n        // Display screen share data (this would be more complex in a real implementation)\n        console.log('Received screen share data:', data);\n      }\n    };\n    socket.on('screen-share-start', handleScreenShareStart);\n    socket.on('screen-share-stop', handleScreenShareStop);\n    socket.on('screen-share-data', handleScreenShareData);\n    return () => {\n      socket.off('screen-share-start', handleScreenShareStart);\n      socket.off('screen-share-stop', handleScreenShareStop);\n      socket.off('screen-share-data', handleScreenShareData);\n      stopScreenShare();\n    };\n  }, [socket, currentUser, isWatching, showToast]);\n  const startScreenShare = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          cursor: 'always',\n          displaySurface: 'monitor'\n        },\n        audio: true\n      });\n      streamRef.current = stream;\n      setIsSharing(true);\n\n      // Notify other users\n      socket.emit('screen-share-start', {\n        roomId,\n        username: currentUser.username,\n        timestamp: Date.now()\n      });\n\n      // Handle stream end (when user stops sharing)\n      stream.getVideoTracks()[0].onended = () => {\n        stopScreenShare();\n      };\n      showToast('ðŸ“º Screen sharing started', 'success');\n\n      // In a real implementation, you would capture frames and send them\n      // For now, we'll just simulate the sharing\n      simulateScreenShare();\n    } catch (error) {\n      console.error('Error starting screen share:', error);\n      showToast('Failed to start screen sharing', 'error');\n    }\n  };\n  const stopScreenShare = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    if (isSharing) {\n      socket.emit('screen-share-stop', {\n        roomId,\n        username: currentUser.username,\n        timestamp: Date.now()\n      });\n    }\n    setIsSharing(false);\n    // Removed the toast notification for screen sharing stopped\n  };\n  const simulateScreenShare = () => {\n    // In a real implementation, this would capture and send screen data\n    const interval = setInterval(() => {\n      if (!isSharing || !streamRef.current) {\n        clearInterval(interval);\n        return;\n      }\n\n      // Simulate sending screen data\n      socket.emit('screen-share-data', {\n        roomId,\n        username: currentUser.username,\n        timestamp: Date.now(),\n        // In reality, this would be compressed image data\n        data: 'simulated-screen-data'\n      });\n    }, 1000); // Send updates every second\n  };\n  const watchScreenShare = () => {\n    setIsWatching(true);\n    showToast(`ðŸ“º Watching ${sharedScreen.username}'s screen`, 'info');\n  };\n  const stopWatching = () => {\n    setIsWatching(false);\n    // Removed the toast notification for stopped watching\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border-t border-gray-200 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-900 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-4 w-4 mr-2\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \"Screen Share\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: [!isSharing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScreenShare,\n        className: \"w-full btn-primary text-sm flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-4 w-4 mr-2\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), \"Share Screen\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopScreenShare,\n        className: \"w-full btn-danger text-sm flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-4 w-4 mr-2\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), \"Stop Sharing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), sharedScreen && sharedScreen.username !== currentUser.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 border border-blue-200 rounded-lg p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-blue-900\",\n              children: [sharedScreen.username, \" is sharing\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-blue-700\",\n              children: \"Screen share available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), !isWatching ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: watchScreenShare,\n            className: \"btn-primary text-xs\",\n            children: \"Watch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopWatching,\n            className: \"btn-secondary text-xs\",\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), isWatching && sharedScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 rounded-lg p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 rounded-lg p-8 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-12 w-12 text-gray-400 mx-auto mb-2\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 text-sm\",\n            children: \"Screen Share Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-xs mt-1\",\n            children: \"(Demo - Real implementation would show actual screen)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600\",\n          children: [\"Watching \", sharedScreen.username, \"'s screen\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), isSharing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-50 border border-green-200 rounded-lg p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-2 w-2 bg-green-400 rounded-full animate-pulse mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-green-800\",\n            children: \"Your screen is being shared\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ScreenShare, \"739cx/vpiy/eIWIJ+UMou7WDsIc=\");\n_c = ScreenShare;\nexport default ScreenShare;\nvar _c;\n$RefreshReg$(_c, \"ScreenShare\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ScreenShare","socket","roomId","currentUser","showToast","_s","isSharing","setIsSharing","isWatching","setIsWatching","sharedScreen","setSharedScreen","videoRef","streamRef","handleScreenShareStart","data","username","handleScreenShareStop","handleScreenShareData","console","log","on","off","stopScreenShare","startScreenShare","stream","navigator","mediaDevices","getDisplayMedia","video","cursor","displaySurface","audio","current","emit","timestamp","Date","now","getVideoTracks","onended","simulateScreenShare","error","getTracks","forEach","track","stop","interval","setInterval","clearInterval","watchScreenShare","stopWatching","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/CollabBoard/frontend/src/components/ScreenShare.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst ScreenShare = ({ socket, roomId, currentUser, showToast }) => {\n  const [isSharing, setIsSharing] = useState(false);\n  const [isWatching, setIsWatching] = useState(false);\n  const [sharedScreen, setSharedScreen] = useState(null);\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    // Listen for screen share events\n    const handleScreenShareStart = (data) => {\n      if (data.username !== currentUser.username) {\n        setSharedScreen(data);\n        showToast(`ðŸ“º ${data.username} started screen sharing`, 'info');\n      }\n    };\n\n    const handleScreenShareStop = (data) => {\n      if (data.username !== currentUser.username) {\n        setSharedScreen(null);\n        setIsWatching(false);\n        showToast(`ðŸ“º ${data.username} stopped screen sharing`, 'info');\n      }\n    };\n\n    const handleScreenShareData = (data) => {\n      if (data.username !== currentUser.username && isWatching) {\n        // Display screen share data (this would be more complex in a real implementation)\n        console.log('Received screen share data:', data);\n      }\n    };\n\n    socket.on('screen-share-start', handleScreenShareStart);\n    socket.on('screen-share-stop', handleScreenShareStop);\n    socket.on('screen-share-data', handleScreenShareData);\n\n    return () => {\n      socket.off('screen-share-start', handleScreenShareStart);\n      socket.off('screen-share-stop', handleScreenShareStop);\n      socket.off('screen-share-data', handleScreenShareData);\n      stopScreenShare();\n    };\n  }, [socket, currentUser, isWatching, showToast]);\n\n  const startScreenShare = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          cursor: 'always',\n          displaySurface: 'monitor'\n        },\n        audio: true\n      });\n\n      streamRef.current = stream;\n      setIsSharing(true);\n\n      // Notify other users\n      socket.emit('screen-share-start', {\n        roomId,\n        username: currentUser.username,\n        timestamp: Date.now()\n      });\n\n      // Handle stream end (when user stops sharing)\n      stream.getVideoTracks()[0].onended = () => {\n        stopScreenShare();\n      };\n\n      showToast('ðŸ“º Screen sharing started', 'success');\n\n      // In a real implementation, you would capture frames and send them\n      // For now, we'll just simulate the sharing\n      simulateScreenShare();\n\n    } catch (error) {\n      console.error('Error starting screen share:', error);\n      showToast('Failed to start screen sharing', 'error');\n    }\n  };\n\n  const stopScreenShare = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n\n    if (isSharing) {\n      socket.emit('screen-share-stop', {\n        roomId,\n        username: currentUser.username,\n        timestamp: Date.now()\n      });\n    }\n\n    setIsSharing(false);\n    // Removed the toast notification for screen sharing stopped\n  };\n\n  const simulateScreenShare = () => {\n    // In a real implementation, this would capture and send screen data\n    const interval = setInterval(() => {\n      if (!isSharing || !streamRef.current) {\n        clearInterval(interval);\n        return;\n      }\n\n      // Simulate sending screen data\n      socket.emit('screen-share-data', {\n        roomId,\n        username: currentUser.username,\n        timestamp: Date.now(),\n        // In reality, this would be compressed image data\n        data: 'simulated-screen-data'\n      });\n    }, 1000); // Send updates every second\n  };\n\n  const watchScreenShare = () => {\n    setIsWatching(true);\n    showToast(`ðŸ“º Watching ${sharedScreen.username}'s screen`, 'info');\n  };\n\n  const stopWatching = () => {\n    setIsWatching(false);\n    // Removed the toast notification for stopped watching\n  };\n\n  return (\n    <div className=\"bg-white border-t border-gray-200 p-4\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-900 flex items-center\">\n          <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n          </svg>\n          Screen Share\n        </h3>\n      </div>\n\n      {/* Screen sharing controls */}\n      <div className=\"space-y-3\">\n        {!isSharing ? (\n          <button\n            onClick={startScreenShare}\n            className=\"w-full btn-primary text-sm flex items-center justify-center\"\n          >\n            <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\n            </svg>\n            Share Screen\n          </button>\n        ) : (\n          <button\n            onClick={stopScreenShare}\n            className=\"w-full btn-danger text-sm flex items-center justify-center\"\n          >\n            <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728\" />\n            </svg>\n            Stop Sharing\n          </button>\n        )}\n\n        {/* Show shared screen info */}\n        {sharedScreen && sharedScreen.username !== currentUser.username && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-blue-900\">\n                  {sharedScreen.username} is sharing\n                </p>\n                <p className=\"text-xs text-blue-700\">\n                  Screen share available\n                </p>\n              </div>\n              \n              {!isWatching ? (\n                <button\n                  onClick={watchScreenShare}\n                  className=\"btn-primary text-xs\"\n                >\n                  Watch\n                </button>\n              ) : (\n                <button\n                  onClick={stopWatching}\n                  className=\"btn-secondary text-xs\"\n                >\n                  Stop\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Screen share viewer */}\n        {isWatching && sharedScreen && (\n          <div className=\"bg-gray-100 rounded-lg p-4 text-center\">\n            <div className=\"bg-gray-800 rounded-lg p-8 mb-2\">\n              <svg className=\"h-12 w-12 text-gray-400 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n              </svg>\n              <p className=\"text-gray-400 text-sm\">\n                Screen Share Preview\n              </p>\n              <p className=\"text-gray-500 text-xs mt-1\">\n                (Demo - Real implementation would show actual screen)\n              </p>\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              Watching {sharedScreen.username}'s screen\n            </p>\n          </div>\n        )}\n\n        {isSharing && (\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n            <div className=\"flex items-center\">\n              <div className=\"h-2 w-2 bg-green-400 rounded-full animate-pulse mr-2\"></div>\n              <p className=\"text-sm text-green-800\">\n                Your screen is being shared\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenShare;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMiB,QAAQ,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMiB,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,MAAM,EAAE;;IAEb;IACA,MAAMa,sBAAsB,GAAIC,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACC,QAAQ,KAAKb,WAAW,CAACa,QAAQ,EAAE;QAC1CL,eAAe,CAACI,IAAI,CAAC;QACrBX,SAAS,CAAC,MAAMW,IAAI,CAACC,QAAQ,yBAAyB,EAAE,MAAM,CAAC;MACjE;IACF,CAAC;IAED,MAAMC,qBAAqB,GAAIF,IAAI,IAAK;MACtC,IAAIA,IAAI,CAACC,QAAQ,KAAKb,WAAW,CAACa,QAAQ,EAAE;QAC1CL,eAAe,CAAC,IAAI,CAAC;QACrBF,aAAa,CAAC,KAAK,CAAC;QACpBL,SAAS,CAAC,MAAMW,IAAI,CAACC,QAAQ,yBAAyB,EAAE,MAAM,CAAC;MACjE;IACF,CAAC;IAED,MAAME,qBAAqB,GAAIH,IAAI,IAAK;MACtC,IAAIA,IAAI,CAACC,QAAQ,KAAKb,WAAW,CAACa,QAAQ,IAAIR,UAAU,EAAE;QACxD;QACAW,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEL,IAAI,CAAC;MAClD;IACF,CAAC;IAEDd,MAAM,CAACoB,EAAE,CAAC,oBAAoB,EAAEP,sBAAsB,CAAC;IACvDb,MAAM,CAACoB,EAAE,CAAC,mBAAmB,EAAEJ,qBAAqB,CAAC;IACrDhB,MAAM,CAACoB,EAAE,CAAC,mBAAmB,EAAEH,qBAAqB,CAAC;IAErD,OAAO,MAAM;MACXjB,MAAM,CAACqB,GAAG,CAAC,oBAAoB,EAAER,sBAAsB,CAAC;MACxDb,MAAM,CAACqB,GAAG,CAAC,mBAAmB,EAAEL,qBAAqB,CAAC;MACtDhB,MAAM,CAACqB,GAAG,CAAC,mBAAmB,EAAEJ,qBAAqB,CAAC;MACtDK,eAAe,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAACtB,MAAM,EAAEE,WAAW,EAAEK,UAAU,EAAEJ,SAAS,CAAC,CAAC;EAEhD,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,eAAe,CAAC;QAC1DC,KAAK,EAAE;UACLC,MAAM,EAAE,QAAQ;UAChBC,cAAc,EAAE;QAClB,CAAC;QACDC,KAAK,EAAE;MACT,CAAC,CAAC;MAEFnB,SAAS,CAACoB,OAAO,GAAGR,MAAM;MAC1BlB,YAAY,CAAC,IAAI,CAAC;;MAElB;MACAN,MAAM,CAACiC,IAAI,CAAC,oBAAoB,EAAE;QAChChC,MAAM;QACNc,QAAQ,EAAEb,WAAW,CAACa,QAAQ;QAC9BmB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC,CAAC;;MAEF;MACAZ,MAAM,CAACa,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,GAAG,MAAM;QACzChB,eAAe,CAAC,CAAC;MACnB,CAAC;MAEDnB,SAAS,CAAC,2BAA2B,EAAE,SAAS,CAAC;;MAEjD;MACA;MACAoC,mBAAmB,CAAC,CAAC;IAEvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdtB,OAAO,CAACsB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDrC,SAAS,CAAC,gCAAgC,EAAE,OAAO,CAAC;IACtD;EACF,CAAC;EAED,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIV,SAAS,CAACoB,OAAO,EAAE;MACrBpB,SAAS,CAACoB,OAAO,CAACS,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC5DhC,SAAS,CAACoB,OAAO,GAAG,IAAI;IAC1B;IAEA,IAAI3B,SAAS,EAAE;MACbL,MAAM,CAACiC,IAAI,CAAC,mBAAmB,EAAE;QAC/BhC,MAAM;QACNc,QAAQ,EAAEb,WAAW,CAACa,QAAQ;QAC9BmB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC,CAAC;IACJ;IAEA9B,YAAY,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAI,CAACzC,SAAS,IAAI,CAACO,SAAS,CAACoB,OAAO,EAAE;QACpCe,aAAa,CAACF,QAAQ,CAAC;QACvB;MACF;;MAEA;MACA7C,MAAM,CAACiC,IAAI,CAAC,mBAAmB,EAAE;QAC/BhC,MAAM;QACNc,QAAQ,EAAEb,WAAW,CAACa,QAAQ;QAC9BmB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACrB;QACAtB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMkC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BxC,aAAa,CAAC,IAAI,CAAC;IACnBL,SAAS,CAAC,eAAeM,YAAY,CAACM,QAAQ,WAAW,EAAE,MAAM,CAAC;EACpE,CAAC;EAED,MAAMkC,YAAY,GAAGA,CAAA,KAAM;IACzBzC,aAAa,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKoD,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDrD,OAAA;MAAKoD,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACrDrD,OAAA;QAAIoD,SAAS,EAAC,qDAAqD;QAAAC,QAAA,gBACjErD,OAAA;UAAKoD,SAAS,EAAC,cAAc;UAACE,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,eACjFrD,OAAA;YAAMyD,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAA2G;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChL,CAAC,gBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGNhE,OAAA;MAAKoD,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvB,CAAC9C,SAAS,gBACTP,OAAA;QACEiE,OAAO,EAAExC,gBAAiB;QAC1B2B,SAAS,EAAC,6DAA6D;QAAAC,QAAA,gBAEvErD,OAAA;UAAKoD,SAAS,EAAC,cAAc;UAACE,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,eACjFrD,OAAA;YAAMyD,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAAuO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5S,CAAC,gBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEThE,OAAA;QACEiE,OAAO,EAAEzC,eAAgB;QACzB4B,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBAEtErD,OAAA;UAAKoD,SAAS,EAAC,cAAc;UAACE,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,eACjFrD,OAAA;YAAMyD,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAACC,CAAC,EAAC;UAAoH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzL,CAAC,gBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,EAGArD,YAAY,IAAIA,YAAY,CAACM,QAAQ,KAAKb,WAAW,CAACa,QAAQ,iBAC7DjB,OAAA;QAAKoD,SAAS,EAAC,kDAAkD;QAAAC,QAAA,eAC/DrD,OAAA;UAAKoD,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDrD,OAAA;YAAAqD,QAAA,gBACErD,OAAA;cAAGoD,SAAS,EAAC,mCAAmC;cAAAC,QAAA,GAC7C1C,YAAY,CAACM,QAAQ,EAAC,aACzB;YAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACJhE,OAAA;cAAGoD,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAErC;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,EAEL,CAACvD,UAAU,gBACVT,OAAA;YACEiE,OAAO,EAAEf,gBAAiB;YAC1BE,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAChC;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAEThE,OAAA;YACEiE,OAAO,EAAEd,YAAa;YACtBC,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAClC;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGAvD,UAAU,IAAIE,YAAY,iBACzBX,OAAA;QAAKoD,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDrD,OAAA;UAAKoD,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC9CrD,OAAA;YAAKoD,SAAS,EAAC,sCAAsC;YAACE,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,OAAO,EAAC,WAAW;YAAAH,QAAA,eACzGrD,OAAA;cAAMyD,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAE,CAAE;cAACC,CAAC,EAAC;YAA2G;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChL,CAAC,eACNhE,OAAA;YAAGoD,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAErC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJhE,OAAA;YAAGoD,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAE1C;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNhE,OAAA;UAAGoD,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,WAC1B,EAAC1C,YAAY,CAACM,QAAQ,EAAC,WAClC;QAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN,EAEAzD,SAAS,iBACRP,OAAA;QAAKoD,SAAS,EAAC,oDAAoD;QAAAC,QAAA,eACjErD,OAAA;UAAKoD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCrD,OAAA;YAAKoD,SAAS,EAAC;UAAsD;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5EhE,OAAA;YAAGoD,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAC;UAEtC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CArOIL,WAAW;AAAAiE,EAAA,GAAXjE,WAAW;AAuOjB,eAAeA,WAAW;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}