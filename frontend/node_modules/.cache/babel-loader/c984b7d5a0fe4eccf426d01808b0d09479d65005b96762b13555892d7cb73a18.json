{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/PresentationMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PresentationMode = ({\n  socket,\n  roomId,\n  showToast\n}) => {\n  _s();\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [slides, setSlides] = useState([]);\n  const [presenter, setPresenter] = useState(null);\n  useEffect(() => {\n    if (!socket) return;\n    const handlePresentationStart = data => {\n      setIsPresenting(true);\n      setPresenter(data.presenter);\n      setSlides(data.slides);\n      setCurrentSlide(0);\n      showToast(`${data.presenter} started presentation mode`, 'info');\n    };\n    const handlePresentationEnd = data => {\n      setIsPresenting(false);\n      setPresenter(null);\n      setSlides([]);\n      setCurrentSlide(0);\n      showToast(`Presentation ended`, 'info');\n    };\n    const handleSlideChange = data => {\n      setCurrentSlide(data.slideIndex);\n    };\n    socket.on('presentation-start', handlePresentationStart);\n    socket.on('presentation-end', handlePresentationEnd);\n    socket.on('slide-change', handleSlideChange);\n    return () => {\n      socket.off('presentation-start', handlePresentationStart);\n      socket.off('presentation-end', handlePresentationEnd);\n      socket.off('slide-change', handleSlideChange);\n    };\n  }, [socket, showToast]);\n  const startPresentation = () => {\n    // Capture current whiteboard state as slides\n    const whiteboardSlides = [{\n      id: 1,\n      title: 'Current Whiteboard',\n      content: 'whiteboard-content',\n      // This would be the actual canvas data\n      timestamp: new Date()\n    }];\n    setSlides(whiteboardSlides);\n    setIsPresenting(true);\n    setPresenter(socket.username);\n    setCurrentSlide(0);\n    socket.emit('start-presentation', {\n      roomId,\n      presenter: socket.username,\n      slides: whiteboardSlides\n    });\n    showToast('Presentation mode started!', 'success');\n  };\n  const endPresentation = () => {\n    setIsPresenting(false);\n    setPresenter(null);\n    setSlides([]);\n    setCurrentSlide(0);\n    socket.emit('end-presentation', {\n      roomId,\n      presenter: socket.username\n    });\n    showToast('Presentation ended', 'info');\n  };\n  const nextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      const newSlide = currentSlide + 1;\n      setCurrentSlide(newSlide);\n      socket.emit('change-slide', {\n        roomId,\n        slideIndex: newSlide,\n        presenter: socket.username\n      });\n    }\n  };\n  const prevSlide = () => {\n    if (currentSlide > 0) {\n      const newSlide = currentSlide - 1;\n      setCurrentSlide(newSlide);\n      socket.emit('change-slide', {\n        roomId,\n        slideIndex: newSlide,\n        presenter: socket.username\n      });\n    }\n  };\n  const goToSlide = index => {\n    setCurrentSlide(index);\n    socket.emit('change-slide', {\n      roomId,\n      slideIndex: index,\n      presenter: socket.username\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white border-b border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-900\",\n        children: \"Presentation Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), !isPresenting ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPresentation,\n        className: \"px-3 py-1 bg-purple-600 text-white text-xs rounded-md hover:bg-purple-700\",\n        children: \"Start Presenting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : presenter === socket.username ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endPresentation,\n        className: \"px-3 py-1 bg-red-600 text-white text-xs rounded-md hover:bg-red-700\",\n        children: \"End Presentation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), isPresenting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-xs text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Presenter: \", presenter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Slide \", currentSlide + 1, \" of \", slides.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), presenter === socket.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevSlide,\n          disabled: currentSlide === 0,\n          className: \"p-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\",\n          title: \"Previous slide\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M15 19l-7-7 7-7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs px-2 py-1 bg-gray-100 rounded\",\n          children: [currentSlide + 1, \" / \", slides.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextSlide,\n          disabled: currentSlide === slides.length - 1,\n          className: \"p-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\",\n          title: \"Next slide\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 5l7 7-7 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-2 max-h-32 overflow-y-auto\",\n        children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => presenter === socket.username && goToSlide(index),\n          className: `p-2 text-xs rounded border-2 transition-colors ${index === currentSlide ? 'border-purple-500 bg-purple-50' : 'border-gray-200 bg-gray-50 hover:bg-gray-100'} ${presenter !== socket.username ? 'cursor-default' : 'cursor-pointer'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium truncate\",\n            children: slide.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 mt-1\",\n            children: [\"Slide \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, slide.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-500 text-center\",\n        children: presenter === socket.username ? 'Use arrow buttons to navigate slides' : `Following ${presenter}'s presentation`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), !isPresenting && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-gray-500 text-center py-2\",\n      children: \"Turn your whiteboard into a presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(PresentationMode, \"vpO3A1d7W0UZJ2Al+yRokRq9+3Q=\");\n_c = PresentationMode;\nexport default PresentationMode;\nvar _c;\n$RefreshReg$(_c, \"PresentationMode\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PresentationMode","socket","roomId","showToast","_s","isPresenting","setIsPresenting","currentSlide","setCurrentSlide","slides","setSlides","presenter","setPresenter","handlePresentationStart","data","handlePresentationEnd","handleSlideChange","slideIndex","on","off","startPresentation","whiteboardSlides","id","title","content","timestamp","Date","username","emit","endPresentation","nextSlide","length","newSlide","prevSlide","goToSlide","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","map","slide","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/PresentationMode.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PresentationMode = ({ socket, roomId, showToast }) => {\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [slides, setSlides] = useState([]);\n  const [presenter, setPresenter] = useState(null);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handlePresentationStart = (data) => {\n      setIsPresenting(true);\n      setPresenter(data.presenter);\n      setSlides(data.slides);\n      setCurrentSlide(0);\n      showToast(`${data.presenter} started presentation mode`, 'info');\n    };\n\n    const handlePresentationEnd = (data) => {\n      setIsPresenting(false);\n      setPresenter(null);\n      setSlides([]);\n      setCurrentSlide(0);\n      showToast(`Presentation ended`, 'info');\n    };\n\n    const handleSlideChange = (data) => {\n      setCurrentSlide(data.slideIndex);\n    };\n\n    socket.on('presentation-start', handlePresentationStart);\n    socket.on('presentation-end', handlePresentationEnd);\n    socket.on('slide-change', handleSlideChange);\n\n    return () => {\n      socket.off('presentation-start', handlePresentationStart);\n      socket.off('presentation-end', handlePresentationEnd);\n      socket.off('slide-change', handleSlideChange);\n    };\n  }, [socket, showToast]);\n\n  const startPresentation = () => {\n    // Capture current whiteboard state as slides\n    const whiteboardSlides = [\n      {\n        id: 1,\n        title: 'Current Whiteboard',\n        content: 'whiteboard-content', // This would be the actual canvas data\n        timestamp: new Date()\n      }\n    ];\n\n    setSlides(whiteboardSlides);\n    setIsPresenting(true);\n    setPresenter(socket.username);\n    setCurrentSlide(0);\n\n    socket.emit('start-presentation', {\n      roomId,\n      presenter: socket.username,\n      slides: whiteboardSlides\n    });\n\n    showToast('Presentation mode started!', 'success');\n  };\n\n  const endPresentation = () => {\n    setIsPresenting(false);\n    setPresenter(null);\n    setSlides([]);\n    setCurrentSlide(0);\n\n    socket.emit('end-presentation', {\n      roomId,\n      presenter: socket.username\n    });\n\n    showToast('Presentation ended', 'info');\n  };\n\n  const nextSlide = () => {\n    if (currentSlide < slides.length - 1) {\n      const newSlide = currentSlide + 1;\n      setCurrentSlide(newSlide);\n      socket.emit('change-slide', {\n        roomId,\n        slideIndex: newSlide,\n        presenter: socket.username\n      });\n    }\n  };\n\n  const prevSlide = () => {\n    if (currentSlide > 0) {\n      const newSlide = currentSlide - 1;\n      setCurrentSlide(newSlide);\n      socket.emit('change-slide', {\n        roomId,\n        slideIndex: newSlide,\n        presenter: socket.username\n      });\n    }\n  };\n\n  const goToSlide = (index) => {\n    setCurrentSlide(index);\n    socket.emit('change-slide', {\n      roomId,\n      slideIndex: index,\n      presenter: socket.username\n    });\n  };\n\n  return (\n    <div className=\"p-4 bg-white border-b border-gray-200\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-900\">Presentation Mode</h3>\n        {!isPresenting ? (\n          <button\n            onClick={startPresentation}\n            className=\"px-3 py-1 bg-purple-600 text-white text-xs rounded-md hover:bg-purple-700\"\n          >\n            Start Presenting\n          </button>\n        ) : presenter === socket.username ? (\n          <button\n            onClick={endPresentation}\n            className=\"px-3 py-1 bg-red-600 text-white text-xs rounded-md hover:bg-red-700\"\n          >\n            End Presentation\n          </button>\n        ) : null}\n      </div>\n\n      {isPresenting && (\n        <div className=\"space-y-3\">\n          {/* Presenter info */}\n          <div className=\"flex items-center justify-between text-xs text-gray-600\">\n            <span>Presenter: {presenter}</span>\n            <span>Slide {currentSlide + 1} of {slides.length}</span>\n          </div>\n\n          {/* Slide navigation for presenter */}\n          {presenter === socket.username && (\n            <div className=\"flex items-center justify-center space-x-2\">\n              <button\n                onClick={prevSlide}\n                disabled={currentSlide === 0}\n                className=\"p-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\n                title=\"Previous slide\"\n              >\n                <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n              \n              <span className=\"text-xs px-2 py-1 bg-gray-100 rounded\">\n                {currentSlide + 1} / {slides.length}\n              </span>\n              \n              <button\n                onClick={nextSlide}\n                disabled={currentSlide === slides.length - 1}\n                className=\"p-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50\"\n                title=\"Next slide\"\n              >\n                <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </button>\n            </div>\n          )}\n\n          {/* Slide thumbnails */}\n          <div className=\"grid grid-cols-2 gap-2 max-h-32 overflow-y-auto\">\n            {slides.map((slide, index) => (\n              <button\n                key={slide.id}\n                onClick={() => presenter === socket.username && goToSlide(index)}\n                className={`p-2 text-xs rounded border-2 transition-colors ${\n                  index === currentSlide\n                    ? 'border-purple-500 bg-purple-50'\n                    : 'border-gray-200 bg-gray-50 hover:bg-gray-100'\n                } ${presenter !== socket.username ? 'cursor-default' : 'cursor-pointer'}`}\n              >\n                <div className=\"font-medium truncate\">{slide.title}</div>\n                <div className=\"text-gray-500 mt-1\">Slide {index + 1}</div>\n              </button>\n            ))}\n          </div>\n\n          {/* Presentation controls info */}\n          <div className=\"text-xs text-gray-500 text-center\">\n            {presenter === socket.username ? (\n              'Use arrow buttons to navigate slides'\n            ) : (\n              `Following ${presenter}'s presentation`\n            )}\n          </div>\n        </div>\n      )}\n\n      {!isPresenting && (\n        <p className=\"text-xs text-gray-500 text-center py-2\">\n          Turn your whiteboard into a presentation\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PresentationMode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}