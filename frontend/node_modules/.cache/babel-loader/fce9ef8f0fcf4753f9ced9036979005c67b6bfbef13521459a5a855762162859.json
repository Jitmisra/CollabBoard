{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/CollabBoard/frontend/src/components/LaserPointer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LaserPointer = ({\n  socket,\n  roomId,\n  currentUser,\n  showToast\n}) => {\n  _s();\n  const [isLaserActive, setIsLaserActive] = useState(false);\n  const [laserPointers, setLaserPointers] = useState({});\n  const [laserColor, setLaserColor] = useState('#ff0000');\n  const colors = [{\n    name: 'Red',\n    value: '#ff0000'\n  }, {\n    name: 'Green',\n    value: '#00ff00'\n  }, {\n    name: 'Blue',\n    value: '#0000ff'\n  }, {\n    name: 'Purple',\n    value: '#8000ff'\n  }, {\n    name: 'Orange',\n    value: '#ff8000'\n  }, {\n    name: 'Pink',\n    value: '#ff00ff'\n  }];\n  useEffect(() => {\n    if (!socket) return;\n    const handleLaserMove = data => {\n      setLaserPointers(prev => ({\n        ...prev,\n        [data.username]: {\n          x: data.x,\n          y: data.y,\n          color: data.color,\n          timestamp: Date.now()\n        }\n      }));\n\n      // Remove laser pointer after 2 seconds of inactivity\n      setTimeout(() => {\n        setLaserPointers(prev => {\n          const updated = {\n            ...prev\n          };\n          if (updated[data.username] && Date.now() - updated[data.username].timestamp > 1800) {\n            delete updated[data.username];\n          }\n          return updated;\n        });\n      }, 2000);\n    };\n    const handleLaserToggle = data => {\n      if (data.active) {\n        showToast(`${data.username} activated laser pointer`, 'info');\n      } else {\n        setLaserPointers(prev => {\n          const updated = {\n            ...prev\n          };\n          delete updated[data.username];\n          return updated;\n        });\n      }\n    };\n    socket.on('laser-move', handleLaserMove);\n    socket.on('laser-toggle', handleLaserToggle);\n    return () => {\n      socket.off('laser-move', handleLaserMove);\n      socket.off('laser-toggle', handleLaserToggle);\n    };\n  }, [socket, showToast]);\n  useEffect(() => {\n    if (!isLaserActive) return;\n    const handleMouseMove = event => {\n      const rect = event.target.getBoundingClientRect();\n      const x = (event.clientX - rect.left) / rect.width * 100;\n      const y = (event.clientY - rect.top) / rect.height * 100;\n      socket.emit('laser-move', {\n        roomId,\n        username: currentUser.username,\n        x,\n        y,\n        color: laserColor,\n        timestamp: Date.now()\n      });\n    };\n\n    // Add event listener to the whiteboard area\n    const whiteboardElement = document.querySelector('.whiteboard-canvas') || document.body;\n    whiteboardElement.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      whiteboardElement.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [isLaserActive, socket, roomId, currentUser.username, laserColor]);\n  const toggleLaser = () => {\n    const newState = !isLaserActive;\n    setIsLaserActive(newState);\n    socket.emit('laser-toggle', {\n      roomId,\n      username: currentUser.username,\n      active: newState,\n      color: laserColor\n    });\n    if (newState) {\n      showToast('Laser pointer activated! Move your mouse to point', 'success');\n    } else {\n      showToast('Laser pointer deactivated', 'info');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white border-b border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-900\",\n        children: \"Laser Pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLaser,\n        className: `px-3 py-1 text-white text-xs rounded-md transition-colors ${isLaserActive ? 'bg-red-600 hover:bg-red-700 animate-pulse' : 'bg-gray-600 hover:bg-gray-700'}`,\n        children: isLaserActive ? 'ðŸ”´ ON' : 'âš« OFF'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600 mb-2\",\n        children: \"Laser Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-1\",\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLaserColor(color.value),\n          className: `w-6 h-6 rounded-full border-2 transition-all ${laserColor === color.value ? 'border-gray-800 scale-110' : 'border-gray-300 hover:scale-105'}`,\n          style: {\n            backgroundColor: color.value\n          },\n          title: color.name\n        }, color.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600\",\n        children: \"Active Pointers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), Object.keys(laserPointers).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-400 italic\",\n        children: \"No active laser pointers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: Object.entries(laserPointers).map(([username, pointer]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-3 rounded-full animate-pulse\",\n            style: {\n              backgroundColor: pointer.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: [\"(\", Math.round(pointer.x), \"%, \", Math.round(pointer.y), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 p-2 bg-gray-50 rounded text-xs text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium mb-1\",\n        children: \"How to use:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Click \\\"ON\\\" to activate laser pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Move mouse over whiteboard to point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Choose different colors for visibility\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Perfect for presentations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), Object.entries(laserPointers).map(([username, pointer]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed pointer-events-none z-50\",\n      style: {\n        left: `${pointer.x}%`,\n        top: `${pointer.y}%`,\n        transform: 'translate(-50%, -50%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full animate-ping\",\n        style: {\n          backgroundColor: pointer.color,\n          boxShadow: `0 0 20px ${pointer.color}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -top-8 left-1/2 transform -translate-x-1/2 px-2 py-1 text-xs text-white rounded whitespace-nowrap\",\n        style: {\n          backgroundColor: pointer.color\n        },\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, username, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(LaserPointer, \"vNW8y5kkOu5/jRzy7m5pDBY9ITA=\");\n_c = LaserPointer;\nexport default LaserPointer;\nvar _c;\n$RefreshReg$(_c, \"LaserPointer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LaserPointer","socket","roomId","currentUser","showToast","_s","isLaserActive","setIsLaserActive","laserPointers","setLaserPointers","laserColor","setLaserColor","colors","name","value","handleLaserMove","data","prev","username","x","y","color","timestamp","Date","now","setTimeout","updated","handleLaserToggle","active","on","off","handleMouseMove","event","rect","target","getBoundingClientRect","clientX","left","width","clientY","top","height","emit","whiteboardElement","document","querySelector","body","addEventListener","removeEventListener","toggleLaser","newState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","style","backgroundColor","title","Object","keys","length","entries","pointer","Math","round","transform","boxShadow","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/CollabBoard/frontend/src/components/LaserPointer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst LaserPointer = ({ socket, roomId, currentUser, showToast }) => {\n  const [isLaserActive, setIsLaserActive] = useState(false);\n  const [laserPointers, setLaserPointers] = useState({});\n  const [laserColor, setLaserColor] = useState('#ff0000');\n\n  const colors = [\n    { name: 'Red', value: '#ff0000' },\n    { name: 'Green', value: '#00ff00' },\n    { name: 'Blue', value: '#0000ff' },\n    { name: 'Purple', value: '#8000ff' },\n    { name: 'Orange', value: '#ff8000' },\n    { name: 'Pink', value: '#ff00ff' }\n  ];\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleLaserMove = (data) => {\n      setLaserPointers(prev => ({\n        ...prev,\n        [data.username]: {\n          x: data.x,\n          y: data.y,\n          color: data.color,\n          timestamp: Date.now()\n        }\n      }));\n\n      // Remove laser pointer after 2 seconds of inactivity\n      setTimeout(() => {\n        setLaserPointers(prev => {\n          const updated = { ...prev };\n          if (updated[data.username] && Date.now() - updated[data.username].timestamp > 1800) {\n            delete updated[data.username];\n          }\n          return updated;\n        });\n      }, 2000);\n    };\n\n    const handleLaserToggle = (data) => {\n      if (data.active) {\n        showToast(`${data.username} activated laser pointer`, 'info');\n      } else {\n        setLaserPointers(prev => {\n          const updated = { ...prev };\n          delete updated[data.username];\n          return updated;\n        });\n      }\n    };\n\n    socket.on('laser-move', handleLaserMove);\n    socket.on('laser-toggle', handleLaserToggle);\n\n    return () => {\n      socket.off('laser-move', handleLaserMove);\n      socket.off('laser-toggle', handleLaserToggle);\n    };\n  }, [socket, showToast]);\n\n  useEffect(() => {\n    if (!isLaserActive) return;\n\n    const handleMouseMove = (event) => {\n      const rect = event.target.getBoundingClientRect();\n      const x = ((event.clientX - rect.left) / rect.width) * 100;\n      const y = ((event.clientY - rect.top) / rect.height) * 100;\n\n      socket.emit('laser-move', {\n        roomId,\n        username: currentUser.username,\n        x,\n        y,\n        color: laserColor,\n        timestamp: Date.now()\n      });\n    };\n\n    // Add event listener to the whiteboard area\n    const whiteboardElement = document.querySelector('.whiteboard-canvas') || document.body;\n    whiteboardElement.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      whiteboardElement.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [isLaserActive, socket, roomId, currentUser.username, laserColor]);\n\n  const toggleLaser = () => {\n    const newState = !isLaserActive;\n    setIsLaserActive(newState);\n    \n    socket.emit('laser-toggle', {\n      roomId,\n      username: currentUser.username,\n      active: newState,\n      color: laserColor\n    });\n\n    if (newState) {\n      showToast('Laser pointer activated! Move your mouse to point', 'success');\n    } else {\n      showToast('Laser pointer deactivated', 'info');\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white border-b border-gray-200\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-900\">Laser Pointer</h3>\n        <button\n          onClick={toggleLaser}\n          className={`px-3 py-1 text-white text-xs rounded-md transition-colors ${\n            isLaserActive \n              ? 'bg-red-600 hover:bg-red-700 animate-pulse' \n              : 'bg-gray-600 hover:bg-gray-700'\n          }`}\n        >\n          {isLaserActive ? 'ðŸ”´ ON' : 'âš« OFF'}\n        </button>\n      </div>\n\n      {/* Color selector */}\n      <div className=\"mb-3\">\n        <div className=\"text-xs text-gray-600 mb-2\">Laser Color:</div>\n        <div className=\"flex flex-wrap gap-1\">\n          {colors.map(color => (\n            <button\n              key={color.value}\n              onClick={() => setLaserColor(color.value)}\n              className={`w-6 h-6 rounded-full border-2 transition-all ${\n                laserColor === color.value \n                  ? 'border-gray-800 scale-110' \n                  : 'border-gray-300 hover:scale-105'\n              }`}\n              style={{ backgroundColor: color.value }}\n              title={color.name}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Active pointers list */}\n      <div className=\"space-y-2\">\n        <div className=\"text-xs text-gray-600\">Active Pointers:</div>\n        {Object.keys(laserPointers).length === 0 ? (\n          <div className=\"text-xs text-gray-400 italic\">No active laser pointers</div>\n        ) : (\n          <div className=\"space-y-1\">\n            {Object.entries(laserPointers).map(([username, pointer]) => (\n              <div key={username} className=\"flex items-center space-x-2 text-xs\">\n                <div\n                  className=\"w-3 h-3 rounded-full animate-pulse\"\n                  style={{ backgroundColor: pointer.color }}\n                />\n                <span className=\"text-gray-700\">{username}</span>\n                <span className=\"text-gray-400\">\n                  ({Math.round(pointer.x)}%, {Math.round(pointer.y)}%)\n                </span>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-3 p-2 bg-gray-50 rounded text-xs text-gray-600\">\n        <div className=\"font-medium mb-1\">How to use:</div>\n        <ul className=\"space-y-1\">\n          <li>â€¢ Click \"ON\" to activate laser pointer</li>\n          <li>â€¢ Move mouse over whiteboard to point</li>\n          <li>â€¢ Choose different colors for visibility</li>\n          <li>â€¢ Perfect for presentations!</li>\n        </ul>\n      </div>\n\n      {/* Render laser pointers */}\n      {Object.entries(laserPointers).map(([username, pointer]) => (\n        <div\n          key={username}\n          className=\"fixed pointer-events-none z-50\"\n          style={{\n            left: `${pointer.x}%`,\n            top: `${pointer.y}%`,\n            transform: 'translate(-50%, -50%)'\n          }}\n        >\n          {/* Laser dot */}\n          <div\n            className=\"w-4 h-4 rounded-full animate-ping\"\n            style={{\n              backgroundColor: pointer.color,\n              boxShadow: `0 0 20px ${pointer.color}`\n            }}\n          />\n          {/* Username label */}\n          <div\n            className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 px-2 py-1 text-xs text-white rounded whitespace-nowrap\"\n            style={{ backgroundColor: pointer.color }}\n          >\n            {username}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LaserPointer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}