{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/contexts/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocketContext = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocketContext must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocketContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const socket = useSocket();\n  const {\n    user\n  } = useAuth();\n  const [isConnected, setIsConnected] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [roomData, setRoomData] = useState({\n    whiteboardData: [],\n    notesData: ''\n  });\n  useEffect(() => {\n    if (!socket) return;\n    const handleConnect = () => {\n      setIsConnected(true);\n    };\n    const handleDisconnect = () => {\n      setIsConnected(false);\n    };\n    const handleRoomData = data => {\n      setRoomData({\n        whiteboardData: data.whiteboardData || [],\n        notesData: data.notesData || ''\n      });\n    };\n    const handleUsersUpdate = usersList => {\n      setUsers(usersList);\n    };\n    socket.on('connect', handleConnect);\n    socket.on('disconnect', handleDisconnect);\n    socket.on('room-data', handleRoomData);\n    socket.on('users-update', handleUsersUpdate);\n\n    // Check initial connection status\n    if (socket.connected) {\n      setIsConnected(true);\n    }\n    return () => {\n      socket.off('connect', handleConnect);\n      socket.off('disconnect', handleDisconnect);\n      socket.off('room-data', handleRoomData);\n      socket.off('users-update', handleUsersUpdate);\n    };\n  }, [socket]);\n  const joinRoom = (roomId, username) => {\n    if (socket) {\n      socket.emit('join-room', {\n        roomId,\n        username\n      });\n    }\n  };\n  const leaveRoom = () => {\n    if (socket) {\n      socket.disconnect();\n      socket.connect();\n    }\n  };\n  const value = {\n    socket,\n    isConnected,\n    users,\n    roomData,\n    joinRoom,\n    leaveRoom\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"m+egcl7LYdRgStPRbZ/+hKxAilU=\", false, function () {\n  return [useSocket, useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useSocket","useAuth","jsxDEV","_jsxDEV","SocketContext","useSocketContext","_s","context","Error","SocketProvider","children","_s2","socket","user","isConnected","setIsConnected","users","setUsers","roomData","setRoomData","whiteboardData","notesData","handleConnect","handleDisconnect","handleRoomData","data","handleUsersUpdate","usersList","on","connected","off","joinRoom","roomId","username","emit","leaveRoom","disconnect","connect","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const useSocketContext = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocketContext must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const socket = useSocket();\n  const { user } = useAuth();\n  const [isConnected, setIsConnected] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [roomData, setRoomData] = useState({\n    whiteboardData: [],\n    notesData: ''\n  });\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleConnect = () => {\n      setIsConnected(true);\n    };\n\n    const handleDisconnect = () => {\n      setIsConnected(false);\n    };\n\n    const handleRoomData = (data) => {\n      setRoomData({\n        whiteboardData: data.whiteboardData || [],\n        notesData: data.notesData || ''\n      });\n    };\n\n    const handleUsersUpdate = (usersList) => {\n      setUsers(usersList);\n    };\n\n    socket.on('connect', handleConnect);\n    socket.on('disconnect', handleDisconnect);\n    socket.on('room-data', handleRoomData);\n    socket.on('users-update', handleUsersUpdate);\n\n    // Check initial connection status\n    if (socket.connected) {\n      setIsConnected(true);\n    }\n\n    return () => {\n      socket.off('connect', handleConnect);\n      socket.off('disconnect', handleDisconnect);\n      socket.off('room-data', handleRoomData);\n      socket.off('users-update', handleUsersUpdate);\n    };\n  }, [socket]);\n\n  const joinRoom = (roomId, username) => {\n    if (socket) {\n      socket.emit('join-room', { roomId, username });\n    }\n  };\n\n  const leaveRoom = () => {\n    if (socket) {\n      socket.disconnect();\n      socket.connect();\n    }\n  };\n\n  const value = {\n    socket,\n    isConnected,\n    users,\n    roomData,\n    joinRoom,\n    leaveRoom\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}