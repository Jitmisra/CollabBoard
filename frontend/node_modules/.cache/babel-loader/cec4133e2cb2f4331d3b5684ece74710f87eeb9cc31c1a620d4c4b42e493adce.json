{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { exportCanvasAsPNG, generateTimestampedFilename } from '../utils/export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  socket,\n  roomId,\n  initialData,\n  showToast\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTool, setCurrentTool] = useState('pen');\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [currentSize, setCurrentSize] = useState(3);\n  const [drawingData, setDrawingData] = useState([]);\n\n  // Drawing state\n  const lastPointRef = useRef(null);\n\n  // Colors palette\n  const colors = ['#000000', '#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF', '#FFA500', '#800080', '#FFC0CB', '#A52A2A', '#808080'];\n\n  // Initialize canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      const container = canvas.parentElement;\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n\n      // Redraw existing content\n      redrawCanvas();\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n\n  // Load initial data\n  useEffect(() => {\n    if (initialData && initialData.length > 0) {\n      setDrawingData(initialData);\n      redrawCanvas();\n    }\n  }, [initialData]);\n\n  // Socket event listeners\n  useEffect(() => {\n    if (!socket) return;\n    const handleDrawing = data => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n        setDrawingData(prev => [...prev, data]);\n      } else if (data.type === 'clear') {\n        clearCanvas();\n        setDrawingData([]);\n      }\n    };\n    const handleClearWhiteboard = () => {\n      clearCanvas();\n      setDrawingData([]);\n    };\n    socket.on('drawing', handleDrawing);\n    socket.on('clear-whiteboard', handleClearWhiteboard);\n    return () => {\n      socket.off('drawing', handleDrawing);\n      socket.off('clear-whiteboard', handleClearWhiteboard);\n    };\n  }, [socket]);\n  const redrawCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Redraw all stored drawing data\n    drawingData.forEach(data => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n      }\n    });\n  }, [drawingData]);\n  const drawLine = (x0, y0, x1, y1, color, size) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = size;\n    ctx.lineCap = 'round';\n    ctx.stroke();\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  const getTouchPos = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.touches[0].clientX - rect.left,\n      y: e.touches[0].clientY - rect.top\n    };\n  };\n\n  // Mouse events\n  const handleMouseDown = e => {\n    if (currentTool !== 'pen') return;\n    setIsDrawing(true);\n    const pos = getMousePos(e);\n    lastPointRef.current = pos;\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing || currentTool !== 'pen') return;\n    const pos = getMousePos(e);\n    const lastPoint = lastPointRef.current;\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n    lastPointRef.current = pos;\n  };\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = e => {\n    e.preventDefault();\n    if (currentTool !== 'pen') return;\n    setIsDrawing(true);\n    const pos = getTouchPos(e);\n    lastPointRef.current = pos;\n  };\n  const handleTouchMove = e => {\n    e.preventDefault();\n    if (!isDrawing || currentTool !== 'pen') return;\n    const pos = getTouchPos(e);\n    const lastPoint = lastPointRef.current;\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n    lastPointRef.current = pos;\n  };\n  const handleTouchEnd = e => {\n    e.preventDefault();\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n  const handleClear = () => {\n    if (window.confirm('Are you sure you want to clear the whiteboard?')) {\n      clearCanvas();\n      setDrawingData([]);\n      socket.emit('clear-whiteboard');\n      showToast('Whiteboard cleared', 'info');\n    }\n  };\n  const handleExport = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const filename = generateTimestampedFilename(`whiteboard_${roomId}`, 'png');\n    const success = exportCanvasAsPNG(canvas, filename);\n    if (success) {\n      showToast('Whiteboard exported successfully!', 'success');\n    } else {\n      showToast('Failed to export whiteboard', 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentTool('pen'),\n            className: `p-2 rounded-lg transition-colors ${currentTool === 'pen' ? 'bg-primary-600 text-white' : 'bg-white text-gray-600 hover:bg-gray-100'}`,\n            title: \"Pen Tool\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentColor(color),\n            className: `w-8 h-8 rounded-full border-2 transition-all ${currentColor === color ? 'border-gray-800 scale-110' : 'border-gray-300 hover:scale-105'}`,\n            style: {\n              backgroundColor: color\n            },\n            title: `Color: ${color}`\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: currentColor,\n            onChange: e => setCurrentColor(e.target.value),\n            className: \"w-8 h-8 rounded-full border-2 border-gray-300 cursor-pointer\",\n            title: \"Custom Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: currentSize,\n            onChange: e => setCurrentSize(parseInt(e.target.value)),\n            className: \"w-20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 w-6\",\n            children: currentSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          className: \"btn-secondary flex items-center\",\n          title: \"Export as PNG\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4 mr-2\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), \"Export\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClear,\n          className: \"btn-danger flex items-center\",\n          title: \"Clear whiteboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-4 w-4 mr-2\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), \"Clear\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-hidden canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"w-full h-full cursor-crosshair\",\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-500 text-center\",\n        children: \"Click and drag to draw \\u2022 Use toolbar to change colors and brush size \\u2022 Changes are saved automatically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"P6Jy5Cd2PCRv2vHFZtDK9J5KkA8=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","exportCanvasAsPNG","generateTimestampedFilename","jsxDEV","_jsxDEV","Whiteboard","socket","roomId","initialData","showToast","_s","canvasRef","isDrawing","setIsDrawing","currentTool","setCurrentTool","currentColor","setCurrentColor","currentSize","setCurrentSize","drawingData","setDrawingData","lastPointRef","colors","canvas","current","ctx","getContext","resizeCanvas","container","parentElement","width","clientWidth","height","clientHeight","redrawCanvas","window","addEventListener","removeEventListener","length","handleDrawing","data","type","drawLine","x0","y0","x1","y1","color","size","prev","clearCanvas","handleClearWhiteboard","on","off","clearRect","forEach","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","getMousePos","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","getTouchPos","touches","handleMouseDown","pos","handleMouseMove","lastPoint","drawData","emit","handleMouseUp","handleTouchStart","preventDefault","handleTouchMove","handleTouchEnd","handleClear","confirm","handleExport","filename","success","className","children","onClick","title","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","map","style","backgroundColor","value","onChange","target","min","max","parseInt","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/Whiteboard.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { exportCanvasAsPNG, generateTimestampedFilename } from '../utils/export';\n\nconst Whiteboard = ({ socket, roomId, initialData, showToast }) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentTool, setCurrentTool] = useState('pen');\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [currentSize, setCurrentSize] = useState(3);\n  const [drawingData, setDrawingData] = useState([]);\n\n  // Drawing state\n  const lastPointRef = useRef(null);\n\n  // Colors palette\n  const colors = [\n    '#000000', '#FF0000', '#00FF00', '#0000FF',\n    '#FFFF00', '#FF00FF', '#00FFFF', '#FFA500',\n    '#800080', '#FFC0CB', '#A52A2A', '#808080'\n  ];\n\n  // Initialize canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    const resizeCanvas = () => {\n      const container = canvas.parentElement;\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n      \n      // Redraw existing content\n      redrawCanvas();\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n\n  // Load initial data\n  useEffect(() => {\n    if (initialData && initialData.length > 0) {\n      setDrawingData(initialData);\n      redrawCanvas();\n    }\n  }, [initialData]);\n\n  // Socket event listeners\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleDrawing = (data) => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n        setDrawingData(prev => [...prev, data]);\n      } else if (data.type === 'clear') {\n        clearCanvas();\n        setDrawingData([]);\n      }\n    };\n\n    const handleClearWhiteboard = () => {\n      clearCanvas();\n      setDrawingData([]);\n    };\n\n    socket.on('drawing', handleDrawing);\n    socket.on('clear-whiteboard', handleClearWhiteboard);\n\n    return () => {\n      socket.off('drawing', handleDrawing);\n      socket.off('clear-whiteboard', handleClearWhiteboard);\n    };\n  }, [socket]);\n\n  const redrawCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Redraw all stored drawing data\n    drawingData.forEach(data => {\n      if (data.type === 'draw') {\n        drawLine(data.x0, data.y0, data.x1, data.y1, data.color, data.size);\n      }\n    });\n  }, [drawingData]);\n\n  const drawLine = (x0, y0, x1, y1, color, size) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = size;\n    ctx.lineCap = 'round';\n    ctx.stroke();\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const getMousePos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n\n  const getTouchPos = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.touches[0].clientX - rect.left,\n      y: e.touches[0].clientY - rect.top\n    };\n  };\n\n  // Mouse events\n  const handleMouseDown = (e) => {\n    if (currentTool !== 'pen') return;\n    \n    setIsDrawing(true);\n    const pos = getMousePos(e);\n    lastPointRef.current = pos;\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing || currentTool !== 'pen') return;\n\n    const pos = getMousePos(e);\n    const lastPoint = lastPointRef.current;\n\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n\n    lastPointRef.current = pos;\n  };\n\n  const handleMouseUp = () => {\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n\n  // Touch events for mobile\n  const handleTouchStart = (e) => {\n    e.preventDefault();\n    if (currentTool !== 'pen') return;\n    \n    setIsDrawing(true);\n    const pos = getTouchPos(e);\n    lastPointRef.current = pos;\n  };\n\n  const handleTouchMove = (e) => {\n    e.preventDefault();\n    if (!isDrawing || currentTool !== 'pen') return;\n\n    const pos = getTouchPos(e);\n    const lastPoint = lastPointRef.current;\n\n    if (lastPoint) {\n      // Draw locally\n      drawLine(lastPoint.x, lastPoint.y, pos.x, pos.y, currentColor, currentSize);\n\n      // Create drawing data\n      const drawData = {\n        type: 'draw',\n        x0: lastPoint.x,\n        y0: lastPoint.y,\n        x1: pos.x,\n        y1: pos.y,\n        color: currentColor,\n        size: currentSize\n      };\n\n      // Emit to other users\n      socket.emit('drawing', drawData);\n\n      // Store locally\n      setDrawingData(prev => [...prev, drawData]);\n    }\n\n    lastPointRef.current = pos;\n  };\n\n  const handleTouchEnd = (e) => {\n    e.preventDefault();\n    setIsDrawing(false);\n    lastPointRef.current = null;\n  };\n\n  const handleClear = () => {\n    if (window.confirm('Are you sure you want to clear the whiteboard?')) {\n      clearCanvas();\n      setDrawingData([]);\n      socket.emit('clear-whiteboard');\n      showToast('Whiteboard cleared', 'info');\n    }\n  };\n\n  const handleExport = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const filename = generateTimestampedFilename(`whiteboard_${roomId}`, 'png');\n    const success = exportCanvasAsPNG(canvas, filename);\n    \n    if (success) {\n      showToast('Whiteboard exported successfully!', 'success');\n    } else {\n      showToast('Failed to export whiteboard', 'error');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white\">\n      {/* Toolbar */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50\">\n        {/* Drawing tools */}\n        <div className=\"flex items-center space-x-4\">\n          {/* Tool selector */}\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setCurrentTool('pen')}\n              className={`p-2 rounded-lg transition-colors ${\n                currentTool === 'pen'\n                  ? 'bg-primary-600 text-white'\n                  : 'bg-white text-gray-600 hover:bg-gray-100'\n              }`}\n              title=\"Pen Tool\"\n            >\n              <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Color picker */}\n          <div className=\"flex items-center space-x-1\">\n            {colors.map(color => (\n              <button\n                key={color}\n                onClick={() => setCurrentColor(color)}\n                className={`w-8 h-8 rounded-full border-2 transition-all ${\n                  currentColor === color\n                    ? 'border-gray-800 scale-110'\n                    : 'border-gray-300 hover:scale-105'\n                }`}\n                style={{ backgroundColor: color }}\n                title={`Color: ${color}`}\n              />\n            ))}\n            \n            {/* Custom color picker */}\n            <input\n              type=\"color\"\n              value={currentColor}\n              onChange={(e) => setCurrentColor(e.target.value)}\n              className=\"w-8 h-8 rounded-full border-2 border-gray-300 cursor-pointer\"\n              title=\"Custom Color\"\n            />\n          </div>\n\n          {/* Brush size */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm text-gray-600\">Size:</label>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"20\"\n              value={currentSize}\n              onChange={(e) => setCurrentSize(parseInt(e.target.value))}\n              className=\"w-20\"\n            />\n            <span className=\"text-sm text-gray-600 w-6\">{currentSize}</span>\n          </div>\n        </div>\n\n        {/* Action buttons */}\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleExport}\n            className=\"btn-secondary flex items-center\"\n            title=\"Export as PNG\"\n          >\n            <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n            Export\n          </button>\n          \n          <button\n            onClick={handleClear}\n            className=\"btn-danger flex items-center\"\n            title=\"Clear whiteboard\"\n          >\n            <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n            Clear\n          </button>\n        </div>\n      </div>\n\n      {/* Canvas */}\n      <div className=\"flex-1 overflow-hidden canvas-container\">\n        <canvas\n          ref={canvasRef}\n          className=\"w-full h-full cursor-crosshair\"\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        />\n      </div>\n\n      {/* Instructions */}\n      <div className=\"p-2 bg-gray-50 border-t border-gray-200\">\n        <p className=\"text-xs text-gray-500 text-center\">\n          Click and drag to draw • Use toolbar to change colors and brush size • Changes are saved automatically\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Whiteboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}