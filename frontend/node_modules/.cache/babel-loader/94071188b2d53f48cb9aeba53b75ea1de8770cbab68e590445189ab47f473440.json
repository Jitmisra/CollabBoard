{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/PomodoroTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = ({\n  socket,\n  roomId,\n  showToast\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n  const [isActive, setIsActive] = useState(false);\n  const [mode, setMode] = useState('work'); // 'work', 'shortBreak', 'longBreak'\n  const [sessions, setSessions] = useState(0);\n  const intervalRef = useRef(null);\n  const modes = {\n    work: {\n      duration: 25 * 60,\n      label: 'Work',\n      color: 'bg-red-500'\n    },\n    shortBreak: {\n      duration: 5 * 60,\n      label: 'Short Break',\n      color: 'bg-green-500'\n    },\n    longBreak: {\n      duration: 15 * 60,\n      label: 'Long Break',\n      color: 'bg-blue-500'\n    }\n  };\n  useEffect(() => {\n    if (!socket) return;\n    const handleTimerSync = data => {\n      setTimeLeft(data.timeLeft);\n      setIsActive(data.isActive);\n      setMode(data.mode);\n      setSessions(data.sessions);\n    };\n    const handleTimerStart = data => {\n      showToast(`Timer started: ${data.mode}`, 'info');\n    };\n    const handleTimerComplete = data => {\n      showToast(`${data.mode} session completed!`, 'success');\n      // Play notification sound\n      playNotificationSound();\n    };\n    socket.on('timer-sync', handleTimerSync);\n    socket.on('timer-start', handleTimerStart);\n    socket.on('timer-complete', handleTimerComplete);\n    return () => {\n      socket.off('timer-sync', handleTimerSync);\n      socket.off('timer-start', handleTimerStart);\n      socket.off('timer-complete', handleTimerComplete);\n    };\n  }, [socket, showToast]);\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            handleTimerComplete();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isActive, timeLeft]);\n  const playNotificationSound = () => {\n    // Create a simple beep sound\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    oscillator.frequency.value = 800;\n    oscillator.type = 'sine';\n    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);\n    oscillator.start(audioContext.currentTime);\n    oscillator.stop(audioContext.currentTime + 0.5);\n  };\n  const startTimer = () => {\n    setIsActive(true);\n    socket.emit('timer-start', {\n      roomId,\n      mode,\n      timeLeft,\n      sessions\n    });\n  };\n  const pauseTimer = () => {\n    setIsActive(false);\n    socket.emit('timer-pause', {\n      roomId\n    });\n  };\n  const resetTimer = () => {\n    setIsActive(false);\n    setTimeLeft(modes[mode].duration);\n    socket.emit('timer-reset', {\n      roomId,\n      mode\n    });\n  };\n  const switchMode = newMode => {\n    setMode(newMode);\n    setTimeLeft(modes[newMode].duration);\n    setIsActive(false);\n    socket.emit('timer-mode-change', {\n      roomId,\n      mode: newMode\n    });\n  };\n  const handleTimerComplete = () => {\n    setIsActive(false);\n    if (mode === 'work') {\n      const newSessions = sessions + 1;\n      setSessions(newSessions);\n\n      // Auto-switch to break\n      const nextMode = newSessions % 4 === 0 ? 'longBreak' : 'shortBreak';\n      setMode(nextMode);\n      setTimeLeft(modes[nextMode].duration);\n      socket.emit('timer-complete', {\n        roomId,\n        completedMode: mode,\n        nextMode,\n        sessions: newSessions\n      });\n    } else {\n      // Break completed, switch to work\n      setMode('work');\n      setTimeLeft(modes.work.duration);\n      socket.emit('timer-complete', {\n        roomId,\n        completedMode: mode,\n        nextMode: 'work',\n        sessions\n      });\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const progress = (modes[mode].duration - timeLeft) / modes[mode].duration * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white border-b border-gray-200\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-900 mb-3\",\n        children: \"Pomodoro Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-3 space-x-1\",\n        children: Object.entries(modes).map(([key, modeData]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => switchMode(key),\n          className: `px-2 py-1 text-xs rounded ${mode === key ? `${modeData.color} text-white` : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: modeData.label\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-24 h-24 mx-auto rounded-full ${modes[mode].color} flex items-center justify-center relative overflow-hidden`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 bg-white opacity-20\",\n            style: {\n              background: `conic-gradient(from 0deg, transparent ${progress}%, rgba(255,255,255,0.3) ${progress}%)`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white font-mono text-lg font-bold relative z-10\",\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center space-x-2 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isActive ? pauseTimer : startTimer,\n          className: `px-4 py-2 text-sm font-medium rounded-md ${isActive ? 'bg-yellow-600 hover:bg-yellow-700 text-white' : 'bg-green-600 hover:bg-green-700 text-white'}`,\n          children: isActive ? 'Pause' : 'Start'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTimer,\n          className: \"px-4 py-2 text-sm font-medium bg-gray-600 text-white rounded-md hover:bg-gray-700\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600\",\n        children: [\"Sessions completed: \", sessions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"4diQvxjBgvKmRpPXViAZ4yapgMc=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","PomodoroTimer","socket","roomId","showToast","_s","timeLeft","setTimeLeft","isActive","setIsActive","mode","setMode","sessions","setSessions","intervalRef","modes","work","duration","label","color","shortBreak","longBreak","handleTimerSync","data","handleTimerStart","handleTimerComplete","playNotificationSound","on","off","current","setInterval","prev","clearInterval","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","frequency","value","type","gain","setValueAtTime","currentTime","exponentialRampToValueAtTime","start","stop","startTimer","emit","pauseTimer","resetTimer","switchMode","newMode","newSessions","nextMode","completedMode","formatTime","seconds","mins","Math","floor","secs","toString","padStart","progress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","modeData","onClick","style","background","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/components/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst PomodoroTimer = ({ socket, roomId, showToast }) => {\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n  const [isActive, setIsActive] = useState(false);\n  const [mode, setMode] = useState('work'); // 'work', 'shortBreak', 'longBreak'\n  const [sessions, setSessions] = useState(0);\n  const intervalRef = useRef(null);\n\n  const modes = {\n    work: { duration: 25 * 60, label: 'Work', color: 'bg-red-500' },\n    shortBreak: { duration: 5 * 60, label: 'Short Break', color: 'bg-green-500' },\n    longBreak: { duration: 15 * 60, label: 'Long Break', color: 'bg-blue-500' }\n  };\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleTimerSync = (data) => {\n      setTimeLeft(data.timeLeft);\n      setIsActive(data.isActive);\n      setMode(data.mode);\n      setSessions(data.sessions);\n    };\n\n    const handleTimerStart = (data) => {\n      showToast(`Timer started: ${data.mode}`, 'info');\n    };\n\n    const handleTimerComplete = (data) => {\n      showToast(`${data.mode} session completed!`, 'success');\n      // Play notification sound\n      playNotificationSound();\n    };\n\n    socket.on('timer-sync', handleTimerSync);\n    socket.on('timer-start', handleTimerStart);\n    socket.on('timer-complete', handleTimerComplete);\n\n    return () => {\n      socket.off('timer-sync', handleTimerSync);\n      socket.off('timer-start', handleTimerStart);\n      socket.off('timer-complete', handleTimerComplete);\n    };\n  }, [socket, showToast]);\n\n  useEffect(() => {\n    if (isActive && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            handleTimerComplete();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n\n    return () => clearInterval(intervalRef.current);\n  }, [isActive, timeLeft]);\n\n  const playNotificationSound = () => {\n    // Create a simple beep sound\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    \n    oscillator.frequency.value = 800;\n    oscillator.type = 'sine';\n    \n    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);\n    \n    oscillator.start(audioContext.currentTime);\n    oscillator.stop(audioContext.currentTime + 0.5);\n  };\n\n  const startTimer = () => {\n    setIsActive(true);\n    socket.emit('timer-start', {\n      roomId,\n      mode,\n      timeLeft,\n      sessions\n    });\n  };\n\n  const pauseTimer = () => {\n    setIsActive(false);\n    socket.emit('timer-pause', { roomId });\n  };\n\n  const resetTimer = () => {\n    setIsActive(false);\n    setTimeLeft(modes[mode].duration);\n    socket.emit('timer-reset', { roomId, mode });\n  };\n\n  const switchMode = (newMode) => {\n    setMode(newMode);\n    setTimeLeft(modes[newMode].duration);\n    setIsActive(false);\n    socket.emit('timer-mode-change', { roomId, mode: newMode });\n  };\n\n  const handleTimerComplete = () => {\n    setIsActive(false);\n    \n    if (mode === 'work') {\n      const newSessions = sessions + 1;\n      setSessions(newSessions);\n      \n      // Auto-switch to break\n      const nextMode = newSessions % 4 === 0 ? 'longBreak' : 'shortBreak';\n      setMode(nextMode);\n      setTimeLeft(modes[nextMode].duration);\n      \n      socket.emit('timer-complete', {\n        roomId,\n        completedMode: mode,\n        nextMode,\n        sessions: newSessions\n      });\n    } else {\n      // Break completed, switch to work\n      setMode('work');\n      setTimeLeft(modes.work.duration);\n      \n      socket.emit('timer-complete', {\n        roomId,\n        completedMode: mode,\n        nextMode: 'work',\n        sessions\n      });\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const progress = ((modes[mode].duration - timeLeft) / modes[mode].duration) * 100;\n\n  return (\n    <div className=\"p-4 bg-white border-b border-gray-200\">\n      <div className=\"text-center\">\n        <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Pomodoro Timer</h3>\n        \n        {/* Mode Selector */}\n        <div className=\"flex justify-center mb-3 space-x-1\">\n          {Object.entries(modes).map(([key, modeData]) => (\n            <button\n              key={key}\n              onClick={() => switchMode(key)}\n              className={`px-2 py-1 text-xs rounded ${\n                mode === key \n                  ? `${modeData.color} text-white` \n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              {modeData.label}\n            </button>\n          ))}\n        </div>\n\n        {/* Timer Display */}\n        <div className=\"relative mb-4\">\n          <div className={`w-24 h-24 mx-auto rounded-full ${modes[mode].color} flex items-center justify-center relative overflow-hidden`}>\n            <div \n              className=\"absolute inset-0 bg-white opacity-20\"\n              style={{\n                background: `conic-gradient(from 0deg, transparent ${progress}%, rgba(255,255,255,0.3) ${progress}%)`\n              }}\n            ></div>\n            <span className=\"text-white font-mono text-lg font-bold relative z-10\">\n              {formatTime(timeLeft)}\n            </span>\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex justify-center space-x-2 mb-3\">\n          <button\n            onClick={isActive ? pauseTimer : startTimer}\n            className={`px-4 py-2 text-sm font-medium rounded-md ${\n              isActive \n                ? 'bg-yellow-600 hover:bg-yellow-700 text-white' \n                : 'bg-green-600 hover:bg-green-700 text-white'\n            }`}\n          >\n            {isActive ? 'Pause' : 'Start'}\n          </button>\n          <button\n            onClick={resetTimer}\n            className=\"px-4 py-2 text-sm font-medium bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n          >\n            Reset\n          </button>\n        </div>\n\n        {/* Session Counter */}\n        <div className=\"text-xs text-gray-600\">\n          Sessions completed: {sessions}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PomodoroTimer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}