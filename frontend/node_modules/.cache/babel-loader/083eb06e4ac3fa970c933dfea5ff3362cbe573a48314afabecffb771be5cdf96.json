{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/CollabBoard/frontend/src/components/MindMapGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMapGenerator = ({\n  socket,\n  roomId,\n  showToast\n}) => {\n  _s();\n  const [topic, setTopic] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [mindMapData, setMindMapData] = useState(null);\n  const mindMapTemplates = [{\n    id: 'project-planning',\n    name: 'Project Planning',\n    icon: 'ðŸ“‹',\n    structure: {\n      center: 'Project Name',\n      branches: [{\n        name: 'Goals',\n        color: '#4CAF50',\n        subbranches: ['Objective 1', 'Objective 2', 'Success Metrics']\n      }, {\n        name: 'Timeline',\n        color: '#2196F3',\n        subbranches: ['Phase 1', 'Phase 2', 'Milestones']\n      }, {\n        name: 'Resources',\n        color: '#FF9800',\n        subbranches: ['Team', 'Budget', 'Tools']\n      }, {\n        name: 'Risks',\n        color: '#F44336',\n        subbranches: ['Technical', 'Timeline', 'Budget']\n      }]\n    }\n  }, {\n    id: 'brainstorm',\n    name: 'Brainstorming',\n    icon: 'ðŸ’¡',\n    structure: {\n      center: 'Main Idea',\n      branches: [{\n        name: 'Solutions',\n        color: '#9C27B0',\n        subbranches: ['Option A', 'Option B', 'Option C']\n      }, {\n        name: 'Benefits',\n        color: '#4CAF50',\n        subbranches: ['Advantage 1', 'Advantage 2']\n      }, {\n        name: 'Challenges',\n        color: '#F44336',\n        subbranches: ['Challenge 1', 'Challenge 2']\n      }, {\n        name: 'Next Steps',\n        color: '#2196F3',\n        subbranches: ['Action 1', 'Action 2']\n      }]\n    }\n  }, {\n    id: 'learning',\n    name: 'Learning Map',\n    icon: 'ðŸ“š',\n    structure: {\n      center: 'Topic',\n      branches: [{\n        name: 'Concepts',\n        color: '#3F51B5',\n        subbranches: ['Basic', 'Intermediate', 'Advanced']\n      }, {\n        name: 'Skills',\n        color: '#009688',\n        subbranches: ['Practical', 'Theoretical']\n      }, {\n        name: 'Resources',\n        color: '#FF5722',\n        subbranches: ['Books', 'Videos', 'Practice']\n      }, {\n        name: 'Applications',\n        color: '#795548',\n        subbranches: ['Real-world', 'Projects']\n      }]\n    }\n  }];\n  const generateMindMap = async (template = null) => {\n    if (!topic.trim() && !template) {\n      showToast('Please enter a topic first', 'error');\n      return;\n    }\n    setIsGenerating(true);\n    try {\n      // Simulate AI generation\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      let structure;\n      if (template) {\n        structure = {\n          ...template.structure,\n          center: topic || template.structure.center\n        };\n      } else {\n        // Generate based on topic\n        structure = {\n          center: topic,\n          branches: [{\n            name: 'Key Points',\n            color: '#4CAF50',\n            subbranches: ['Point 1', 'Point 2', 'Point 3']\n          }, {\n            name: 'Details',\n            color: '#2196F3',\n            subbranches: ['Detail A', 'Detail B', 'Detail C']\n          }, {\n            name: 'Examples',\n            color: '#FF9800',\n            subbranches: ['Example 1', 'Example 2']\n          }, {\n            name: 'Related Topics',\n            color: '#9C27B0',\n            subbranches: ['Related A', 'Related B']\n          }]\n        };\n      }\n      setMindMapData(structure);\n\n      // Send to other users\n      socket.emit('mindmap-generated', {\n        roomId,\n        structure,\n        topic: topic || (template === null || template === void 0 ? void 0 : template.structure.center),\n        username: socket.username,\n        timestamp: new Date()\n      });\n      showToast('Mind map generated!', 'success');\n    } catch (error) {\n      showToast('Failed to generate mind map', 'error');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const applyToWhiteboard = () => {\n    if (!mindMapData) return;\n\n    // Clear whiteboard first\n    socket.emit('clear-whiteboard', {\n      roomId\n    });\n    setTimeout(() => {\n      const centerX = 400;\n      const centerY = 300;\n      const radius = 150;\n\n      // Draw center node\n      socket.emit('drawing', {\n        roomId,\n        type: 'circle',\n        x: centerX,\n        y: centerY,\n        radius: 40,\n        color: '#6366f1',\n        username: socket.username\n      });\n      socket.emit('drawing', {\n        roomId,\n        type: 'text',\n        x: centerX - 30,\n        y: centerY + 5,\n        content: mindMapData.center,\n        fontSize: 16,\n        color: '#000',\n        username: socket.username\n      });\n\n      // Draw branches\n      mindMapData.branches.forEach((branch, index) => {\n        const angle = index * 2 * Math.PI / mindMapData.branches.length;\n        const branchX = centerX + Math.cos(angle) * radius;\n        const branchY = centerY + Math.sin(angle) * radius;\n\n        // Draw line to branch\n        socket.emit('drawing', {\n          roomId,\n          type: 'line',\n          x1: centerX,\n          y1: centerY,\n          x2: branchX,\n          y2: branchY,\n          color: branch.color,\n          width: 3,\n          username: socket.username\n        });\n\n        // Draw branch node\n        socket.emit('drawing', {\n          roomId,\n          type: 'rectangle',\n          x: branchX - 40,\n          y: branchY - 15,\n          width: 80,\n          height: 30,\n          color: branch.color,\n          username: socket.username\n        });\n        socket.emit('drawing', {\n          roomId,\n          type: 'text',\n          x: branchX - 25,\n          y: branchY + 5,\n          content: branch.name,\n          fontSize: 12,\n          color: '#fff',\n          username: socket.username\n        });\n\n        // Draw subbranches\n        branch.subbranches.forEach((subbranch, subIndex) => {\n          const subAngle = angle + (subIndex - 1) * 0.3;\n          const subX = branchX + Math.cos(subAngle) * 80;\n          const subY = branchY + Math.sin(subAngle) * 80;\n\n          // Line to subbranch\n          socket.emit('drawing', {\n            roomId,\n            type: 'line',\n            x1: branchX,\n            y1: branchY,\n            x2: subX,\n            y2: subY,\n            color: branch.color,\n            width: 1,\n            username: socket.username\n          });\n\n          // Subbranch text\n          socket.emit('drawing', {\n            roomId,\n            type: 'text',\n            x: subX - 20,\n            y: subY + 5,\n            content: subbranch,\n            fontSize: 10,\n            color: branch.color,\n            username: socket.username\n          });\n        });\n      });\n    }, 500);\n    showToast('Mind map applied to whiteboard!', 'success');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white border-b border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-900\",\n        children: \"AI Mind Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generateMindMap(),\n        disabled: isGenerating || !topic.trim(),\n        className: \"px-3 py-1 bg-purple-600 text-white text-xs rounded-md hover:bg-purple-700 disabled:opacity-50\",\n        children: isGenerating ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin h-3 w-3 border border-white border-t-transparent rounded-full mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), \"Generating...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this) : 'ðŸ§  Generate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your topic or idea...\",\n        value: topic,\n        onChange: e => setTopic(e.target.value),\n        className: \"w-full p-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs font-medium text-gray-700 mb-2\",\n        children: \"Quick Templates:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-1\",\n        children: mindMapTemplates.map(template => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => generateMindMap(template),\n          disabled: isGenerating,\n          className: \"flex items-center space-x-2 p-2 bg-gray-50 rounded hover:bg-gray-100 text-left disabled:opacity-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: template.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium\",\n            children: template.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, template.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), mindMapData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 p-3 bg-purple-50 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium text-purple-900\",\n          children: \"Generated Mind Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyToWhiteboard,\n          className: \"px-2 py-1 bg-purple-600 text-white text-xs rounded hover:bg-purple-700\",\n          children: \"Apply to Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-block px-3 py-1 bg-purple-600 text-white text-sm rounded-full\",\n          children: mindMapData.center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-2\",\n        children: mindMapData.branches.map((branch, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-white px-2 py-1 rounded mb-1\",\n            style: {\n              backgroundColor: branch.color\n            },\n            children: branch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-gray-600 ml-2\",\n            children: branch.subbranches.map((sub, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", sub]\n            }, subIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-blue-50 rounded text-xs text-blue-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium mb-1\",\n        children: \"\\uD83D\\uDCA1 How it works:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Enter any topic or use a template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 AI generates a structured mind map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Apply directly to the whiteboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Perfect for brainstorming sessions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMapGenerator, \"0nu8BPu6oYJQ0GGPGoFrAdB4c0M=\");\n_c = MindMapGenerator;\nexport default MindMapGenerator;\nvar _c;\n$RefreshReg$(_c, \"MindMapGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MindMapGenerator","socket","roomId","showToast","_s","topic","setTopic","isGenerating","setIsGenerating","mindMapData","setMindMapData","mindMapTemplates","id","name","icon","structure","center","branches","color","subbranches","generateMindMap","template","trim","Promise","resolve","setTimeout","emit","username","timestamp","Date","error","applyToWhiteboard","centerX","centerY","radius","type","x","y","content","fontSize","forEach","branch","index","angle","Math","PI","length","branchX","cos","branchY","sin","x1","y1","x2","y2","width","height","subbranch","subIndex","subAngle","subX","subY","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","placeholder","value","onChange","e","target","map","style","backgroundColor","sub","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/CollabBoard/frontend/src/components/MindMapGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MindMapGenerator = ({ socket, roomId, showToast }) => {\n  const [topic, setTopic] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [mindMapData, setMindMapData] = useState(null);\n\n  const mindMapTemplates = [\n    {\n      id: 'project-planning',\n      name: 'Project Planning',\n      icon: 'ðŸ“‹',\n      structure: {\n        center: 'Project Name',\n        branches: [\n          { name: 'Goals', color: '#4CAF50', subbranches: ['Objective 1', 'Objective 2', 'Success Metrics'] },\n          { name: 'Timeline', color: '#2196F3', subbranches: ['Phase 1', 'Phase 2', 'Milestones'] },\n          { name: 'Resources', color: '#FF9800', subbranches: ['Team', 'Budget', 'Tools'] },\n          { name: 'Risks', color: '#F44336', subbranches: ['Technical', 'Timeline', 'Budget'] }\n        ]\n      }\n    },\n    {\n      id: 'brainstorm',\n      name: 'Brainstorming',\n      icon: 'ðŸ’¡',\n      structure: {\n        center: 'Main Idea',\n        branches: [\n          { name: 'Solutions', color: '#9C27B0', subbranches: ['Option A', 'Option B', 'Option C'] },\n          { name: 'Benefits', color: '#4CAF50', subbranches: ['Advantage 1', 'Advantage 2'] },\n          { name: 'Challenges', color: '#F44336', subbranches: ['Challenge 1', 'Challenge 2'] },\n          { name: 'Next Steps', color: '#2196F3', subbranches: ['Action 1', 'Action 2'] }\n        ]\n      }\n    },\n    {\n      id: 'learning',\n      name: 'Learning Map',\n      icon: 'ðŸ“š',\n      structure: {\n        center: 'Topic',\n        branches: [\n          { name: 'Concepts', color: '#3F51B5', subbranches: ['Basic', 'Intermediate', 'Advanced'] },\n          { name: 'Skills', color: '#009688', subbranches: ['Practical', 'Theoretical'] },\n          { name: 'Resources', color: '#FF5722', subbranches: ['Books', 'Videos', 'Practice'] },\n          { name: 'Applications', color: '#795548', subbranches: ['Real-world', 'Projects'] }\n        ]\n      }\n    }\n  ];\n\n  const generateMindMap = async (template = null) => {\n    if (!topic.trim() && !template) {\n      showToast('Please enter a topic first', 'error');\n      return;\n    }\n\n    setIsGenerating(true);\n    \n    try {\n      // Simulate AI generation\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      let structure;\n      \n      if (template) {\n        structure = {\n          ...template.structure,\n          center: topic || template.structure.center\n        };\n      } else {\n        // Generate based on topic\n        structure = {\n          center: topic,\n          branches: [\n            { \n              name: 'Key Points', \n              color: '#4CAF50', \n              subbranches: ['Point 1', 'Point 2', 'Point 3'] \n            },\n            { \n              name: 'Details', \n              color: '#2196F3', \n              subbranches: ['Detail A', 'Detail B', 'Detail C'] \n            },\n            { \n              name: 'Examples', \n              color: '#FF9800', \n              subbranches: ['Example 1', 'Example 2'] \n            },\n            { \n              name: 'Related Topics', \n              color: '#9C27B0', \n              subbranches: ['Related A', 'Related B'] \n            }\n          ]\n        };\n      }\n\n      setMindMapData(structure);\n      \n      // Send to other users\n      socket.emit('mindmap-generated', {\n        roomId,\n        structure,\n        topic: topic || template?.structure.center,\n        username: socket.username,\n        timestamp: new Date()\n      });\n\n      showToast('Mind map generated!', 'success');\n    } catch (error) {\n      showToast('Failed to generate mind map', 'error');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const applyToWhiteboard = () => {\n    if (!mindMapData) return;\n\n    // Clear whiteboard first\n    socket.emit('clear-whiteboard', { roomId });\n\n    setTimeout(() => {\n      const centerX = 400;\n      const centerY = 300;\n      const radius = 150;\n\n      // Draw center node\n      socket.emit('drawing', {\n        roomId,\n        type: 'circle',\n        x: centerX,\n        y: centerY,\n        radius: 40,\n        color: '#6366f1',\n        username: socket.username\n      });\n\n      socket.emit('drawing', {\n        roomId,\n        type: 'text',\n        x: centerX - 30,\n        y: centerY + 5,\n        content: mindMapData.center,\n        fontSize: 16,\n        color: '#000',\n        username: socket.username\n      });\n\n      // Draw branches\n      mindMapData.branches.forEach((branch, index) => {\n        const angle = (index * 2 * Math.PI) / mindMapData.branches.length;\n        const branchX = centerX + Math.cos(angle) * radius;\n        const branchY = centerY + Math.sin(angle) * radius;\n\n        // Draw line to branch\n        socket.emit('drawing', {\n          roomId,\n          type: 'line',\n          x1: centerX,\n          y1: centerY,\n          x2: branchX,\n          y2: branchY,\n          color: branch.color,\n          width: 3,\n          username: socket.username\n        });\n\n        // Draw branch node\n        socket.emit('drawing', {\n          roomId,\n          type: 'rectangle',\n          x: branchX - 40,\n          y: branchY - 15,\n          width: 80,\n          height: 30,\n          color: branch.color,\n          username: socket.username\n        });\n\n        socket.emit('drawing', {\n          roomId,\n          type: 'text',\n          x: branchX - 25,\n          y: branchY + 5,\n          content: branch.name,\n          fontSize: 12,\n          color: '#fff',\n          username: socket.username\n        });\n\n        // Draw subbranches\n        branch.subbranches.forEach((subbranch, subIndex) => {\n          const subAngle = angle + (subIndex - 1) * 0.3;\n          const subX = branchX + Math.cos(subAngle) * 80;\n          const subY = branchY + Math.sin(subAngle) * 80;\n\n          // Line to subbranch\n          socket.emit('drawing', {\n            roomId,\n            type: 'line',\n            x1: branchX,\n            y1: branchY,\n            x2: subX,\n            y2: subY,\n            color: branch.color,\n            width: 1,\n            username: socket.username\n          });\n\n          // Subbranch text\n          socket.emit('drawing', {\n            roomId,\n            type: 'text',\n            x: subX - 20,\n            y: subY + 5,\n            content: subbranch,\n            fontSize: 10,\n            color: branch.color,\n            username: socket.username\n          });\n        });\n      });\n    }, 500);\n\n    showToast('Mind map applied to whiteboard!', 'success');\n  };\n\n  return (\n    <div className=\"p-4 bg-white border-b border-gray-200\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-sm font-medium text-gray-900\">AI Mind Map</h3>\n        <button\n          onClick={() => generateMindMap()}\n          disabled={isGenerating || !topic.trim()}\n          className=\"px-3 py-1 bg-purple-600 text-white text-xs rounded-md hover:bg-purple-700 disabled:opacity-50\"\n        >\n          {isGenerating ? (\n            <div className=\"flex items-center\">\n              <div className=\"animate-spin h-3 w-3 border border-white border-t-transparent rounded-full mr-1\"></div>\n              Generating...\n            </div>\n          ) : (\n            'ðŸ§  Generate'\n          )}\n        </button>\n      </div>\n\n      {/* Topic input */}\n      <div className=\"mb-3\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter your topic or idea...\"\n          value={topic}\n          onChange={(e) => setTopic(e.target.value)}\n          className=\"w-full p-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n        />\n      </div>\n\n      {/* Templates */}\n      <div className=\"mb-3\">\n        <div className=\"text-xs font-medium text-gray-700 mb-2\">Quick Templates:</div>\n        <div className=\"grid grid-cols-1 gap-1\">\n          {mindMapTemplates.map(template => (\n            <button\n              key={template.id}\n              onClick={() => generateMindMap(template)}\n              disabled={isGenerating}\n              className=\"flex items-center space-x-2 p-2 bg-gray-50 rounded hover:bg-gray-100 text-left disabled:opacity-50\"\n            >\n              <span>{template.icon}</span>\n              <span className=\"text-xs font-medium\">{template.name}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Generated mind map preview */}\n      {mindMapData && (\n        <div className=\"mb-3 p-3 bg-purple-50 rounded-md\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"text-sm font-medium text-purple-900\">Generated Mind Map</div>\n            <button\n              onClick={applyToWhiteboard}\n              className=\"px-2 py-1 bg-purple-600 text-white text-xs rounded hover:bg-purple-700\"\n            >\n              Apply to Board\n            </button>\n          </div>\n          \n          <div className=\"text-center mb-2\">\n            <div className=\"inline-block px-3 py-1 bg-purple-600 text-white text-sm rounded-full\">\n              {mindMapData.center}\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-2 gap-2\">\n            {mindMapData.branches.map((branch, index) => (\n              <div key={index} className=\"text-xs\">\n                <div \n                  className=\"font-medium text-white px-2 py-1 rounded mb-1\"\n                  style={{ backgroundColor: branch.color }}\n                >\n                  {branch.name}\n                </div>\n                <ul className=\"text-gray-600 ml-2\">\n                  {branch.subbranches.map((sub, subIndex) => (\n                    <li key={subIndex}>â€¢ {sub}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className=\"p-2 bg-blue-50 rounded text-xs text-blue-800\">\n        <div className=\"font-medium mb-1\">ðŸ’¡ How it works:</div>\n        <ul className=\"space-y-1\">\n          <li>â€¢ Enter any topic or use a template</li>\n          <li>â€¢ AI generates a structured mind map</li>\n          <li>â€¢ Apply directly to the whiteboard</li>\n          <li>â€¢ Perfect for brainstorming sessions!</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MindMapGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}