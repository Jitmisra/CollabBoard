{"ast":null,"code":"/**\n * Export utilities for whiteboard and notes\n *//**\n * Export canvas as PNG image\n * @param {HTMLCanvasElement} canvas - Canvas element to export\n * @param {string} filename - Filename for the download\n */export const exportCanvasAsPNG=function(canvas){let filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'whiteboard.png';try{// Create a new canvas with white background\nconst exportCanvas=document.createElement('canvas');const exportCtx=exportCanvas.getContext('2d');exportCanvas.width=canvas.width;exportCanvas.height=canvas.height;// Fill with white background\nexportCtx.fillStyle='#ffffff';exportCtx.fillRect(0,0,exportCanvas.width,exportCanvas.height);// Draw the original canvas content\nexportCtx.drawImage(canvas,0,0);// Create download link\nexportCanvas.toBlob(blob=>{const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);},'image/png');return true;}catch(error){console.error('Error exporting canvas:',error);return false;}};/**\n * Export notes as text file\n * @param {string} content - Notes content to export\n * @param {string} filename - Filename for the download\n */export const exportNotesAsText=function(content){let filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'notes.txt';try{// Add timestamp header\nconst timestamp=new Date().toLocaleString();const exportContent=\"Collaborative Notes - Exported on \".concat(timestamp,\"\\n\\n\").concat(content);// Create blob and download\nconst blob=new Blob([exportContent],{type:'text/plain'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);return true;}catch(error){console.error('Error exporting notes:',error);return false;}};/**\n * Generate filename with timestamp\n * @param {string} baseName - Base filename\n * @param {string} extension - File extension\n * @returns {string} Filename with timestamp\n */export const generateTimestampedFilename=(baseName,extension)=>{const now=new Date();const timestamp=now.toISOString().slice(0,19).replace(/[:.]/g,'-');return\"\".concat(baseName,\"_\").concat(timestamp,\".\").concat(extension);};/**\n * Copy content to clipboard\n * @param {string} content - Content to copy\n * @returns {Promise<boolean>} Success status\n */export const copyToClipboard=async content=>{try{if(navigator.clipboard&&window.isSecureContext){await navigator.clipboard.writeText(content);return true;}else{// Fallback for older browsers\nconst textArea=document.createElement('textarea');textArea.value=content;textArea.style.position='fixed';textArea.style.left='-999999px';textArea.style.top='-999999px';document.body.appendChild(textArea);textArea.focus();textArea.select();const success=document.execCommand('copy');textArea.remove();return success;}}catch(error){console.error('Error copying to clipboard:',error);return false;}};","map":{"version":3,"names":["exportCanvasAsPNG","canvas","filename","arguments","length","undefined","exportCanvas","document","createElement","exportCtx","getContext","width","height","fillStyle","fillRect","drawImage","toBlob","blob","url","URL","createObjectURL","link","href","download","body","appendChild","click","removeChild","revokeObjectURL","error","console","exportNotesAsText","content","timestamp","Date","toLocaleString","exportContent","concat","Blob","type","generateTimestampedFilename","baseName","extension","now","toISOString","slice","replace","copyToClipboard","navigator","clipboard","window","isSecureContext","writeText","textArea","value","style","position","left","top","focus","select","success","execCommand","remove"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/utils/export.js"],"sourcesContent":["/**\n * Export utilities for whiteboard and notes\n */\n\n/**\n * Export canvas as PNG image\n * @param {HTMLCanvasElement} canvas - Canvas element to export\n * @param {string} filename - Filename for the download\n */\nexport const exportCanvasAsPNG = (canvas, filename = 'whiteboard.png') => {\n  try {\n    // Create a new canvas with white background\n    const exportCanvas = document.createElement('canvas');\n    const exportCtx = exportCanvas.getContext('2d');\n    \n    exportCanvas.width = canvas.width;\n    exportCanvas.height = canvas.height;\n    \n    // Fill with white background\n    exportCtx.fillStyle = '#ffffff';\n    exportCtx.fillRect(0, 0, exportCanvas.width, exportCanvas.height);\n    \n    // Draw the original canvas content\n    exportCtx.drawImage(canvas, 0, 0);\n    \n    // Create download link\n    exportCanvas.toBlob((blob) => {\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    }, 'image/png');\n    \n    return true;\n  } catch (error) {\n    console.error('Error exporting canvas:', error);\n    return false;\n  }\n};\n\n/**\n * Export notes as text file\n * @param {string} content - Notes content to export\n * @param {string} filename - Filename for the download\n */\nexport const exportNotesAsText = (content, filename = 'notes.txt') => {\n  try {\n    // Add timestamp header\n    const timestamp = new Date().toLocaleString();\n    const exportContent = `Collaborative Notes - Exported on ${timestamp}\\n\\n${content}`;\n    \n    // Create blob and download\n    const blob = new Blob([exportContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    \n    return true;\n  } catch (error) {\n    console.error('Error exporting notes:', error);\n    return false;\n  }\n};\n\n/**\n * Generate filename with timestamp\n * @param {string} baseName - Base filename\n * @param {string} extension - File extension\n * @returns {string} Filename with timestamp\n */\nexport const generateTimestampedFilename = (baseName, extension) => {\n  const now = new Date();\n  const timestamp = now.toISOString().slice(0, 19).replace(/[:.]/g, '-');\n  return `${baseName}_${timestamp}.${extension}`;\n};\n\n/**\n * Copy content to clipboard\n * @param {string} content - Content to copy\n * @returns {Promise<boolean>} Success status\n */\nexport const copyToClipboard = async (content) => {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(content);\n      return true;\n    } else {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = content;\n      textArea.style.position = 'fixed';\n      textArea.style.left = '-999999px';\n      textArea.style.top = '-999999px';\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      const success = document.execCommand('copy');\n      textArea.remove();\n      return success;\n    }\n  } catch (error) {\n    console.error('Error copying to clipboard:', error);\n    return false;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}