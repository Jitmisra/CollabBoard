{"ast":null,"code":"var _jsxFileName = \"/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JoinRoom from './components/JoinRoom';\nimport CollaborationRoom from './components/CollaborationRoom';\nimport { useSocket } from './hooks/useSocket';\nimport { getStoredUser, storeUser, clearStoredUser } from './utils/storage';\nimport Toast from './components/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [toast, setToast] = useState(null);\n  const socket = useSocket();\n\n  // Load stored user data on app start\n  useEffect(() => {\n    const storedUser = getStoredUser();\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n\n  // Handle socket connection status\n  useEffect(() => {\n    if (!socket) return;\n    const handleConnect = () => {\n      setIsConnected(true);\n      showToast('Connected to server', 'success');\n    };\n    const handleDisconnect = () => {\n      setIsConnected(false);\n      showToast('Disconnected from server', 'error');\n    };\n    const handleConnectError = error => {\n      console.error('Connection error:', error);\n      showToast('Failed to connect to server', 'error');\n    };\n    socket.on('connect', handleConnect);\n    socket.on('disconnect', handleDisconnect);\n    socket.on('connect_error', handleConnectError);\n\n    // Check initial connection status\n    if (socket.connected) {\n      setIsConnected(true);\n    }\n    return () => {\n      socket.off('connect', handleConnect);\n      socket.off('disconnect', handleDisconnect);\n      socket.off('connect_error', handleConnectError);\n    };\n  }, [socket]);\n  const handleJoinRoom = userData => {\n    setUser(userData);\n    setRoomId(userData.roomId);\n    storeUser(userData);\n\n    // Join room via socket\n    if (socket) {\n      socket.emit('join-room', {\n        roomId: userData.roomId,\n        username: userData.username\n      });\n    }\n  };\n  const handleLeaveRoom = () => {\n    setUser(null);\n    setRoomId(null);\n    clearStoredUser();\n\n    // Disconnect and reconnect to leave room\n    if (socket) {\n      socket.disconnect();\n      socket.connect();\n    }\n  };\n  const showToast = (message, type = 'info') => {\n    setToast({\n      message,\n      type\n    });\n    setTimeout(() => setToast(null), 3000);\n  };\n\n  // Show loading screen while socket is connecting\n  if (!socket) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: [\"Connecting to server\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-dots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${isConnected ? 'bg-green-500' : 'bg-red-500'} text-white text-center py-1 text-sm`,\n      children: isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected - Attempting to reconnect...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-8\",\n      children: !user || !roomId ? /*#__PURE__*/_jsxDEV(JoinRoom, {\n        onJoinRoom: handleJoinRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CollaborationRoom, {\n        user: user,\n        roomId: roomId,\n        socket: socket,\n        onLeaveRoom: handleLeaveRoom,\n        showToast: showToast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), toast && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: toast.type,\n      onClose: () => setToast(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7fwV7EEagwr3Jd89tjn7n7e5mfA=\", false, function () {\n  return [useSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","JoinRoom","CollaborationRoom","useSocket","getStoredUser","storeUser","clearStoredUser","Toast","jsxDEV","_jsxDEV","App","_s","user","setUser","roomId","setRoomId","isConnected","setIsConnected","toast","setToast","socket","storedUser","handleConnect","showToast","handleDisconnect","handleConnectError","error","console","on","connected","off","handleJoinRoom","userData","emit","username","handleLeaveRoom","disconnect","connect","message","type","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onJoinRoom","onLeaveRoom","onClose","_c","$RefreshReg$"],"sources":["/Users/jitmisra/Desktop/ralwayhackathon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport JoinRoom from './components/JoinRoom';\nimport CollaborationRoom from './components/CollaborationRoom';\nimport { useSocket } from './hooks/useSocket';\nimport { getStoredUser, storeUser, clearStoredUser } from './utils/storage';\nimport Toast from './components/Toast';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [toast, setToast] = useState(null);\n  \n  const socket = useSocket();\n\n  // Load stored user data on app start\n  useEffect(() => {\n    const storedUser = getStoredUser();\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n\n  // Handle socket connection status\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleConnect = () => {\n      setIsConnected(true);\n      showToast('Connected to server', 'success');\n    };\n\n    const handleDisconnect = () => {\n      setIsConnected(false);\n      showToast('Disconnected from server', 'error');\n    };\n\n    const handleConnectError = (error) => {\n      console.error('Connection error:', error);\n      showToast('Failed to connect to server', 'error');\n    };\n\n    socket.on('connect', handleConnect);\n    socket.on('disconnect', handleDisconnect);\n    socket.on('connect_error', handleConnectError);\n\n    // Check initial connection status\n    if (socket.connected) {\n      setIsConnected(true);\n    }\n\n    return () => {\n      socket.off('connect', handleConnect);\n      socket.off('disconnect', handleDisconnect);\n      socket.off('connect_error', handleConnectError);\n    };\n  }, [socket]);\n\n  const handleJoinRoom = (userData) => {\n    setUser(userData);\n    setRoomId(userData.roomId);\n    storeUser(userData);\n    \n    // Join room via socket\n    if (socket) {\n      socket.emit('join-room', {\n        roomId: userData.roomId,\n        username: userData.username\n      });\n    }\n  };\n\n  const handleLeaveRoom = () => {\n    setUser(null);\n    setRoomId(null);\n    clearStoredUser();\n    \n    // Disconnect and reconnect to leave room\n    if (socket) {\n      socket.disconnect();\n      socket.connect();\n    }\n  };\n\n  const showToast = (message, type = 'info') => {\n    setToast({ message, type });\n    setTimeout(() => setToast(null), 3000);\n  };\n\n  // Show loading screen while socket is connecting\n  if (!socket) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Connecting to server<span className=\"loading-dots\"></span></p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Connection status indicator */}\n      <div className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n        isConnected ? 'bg-green-500' : 'bg-red-500'\n      } text-white text-center py-1 text-sm`}>\n        {isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected - Attempting to reconnect...'}\n      </div>\n\n      {/* Main content */}\n      <div className=\"pt-8\">\n        {!user || !roomId ? (\n          <JoinRoom onJoinRoom={handleJoinRoom} />\n        ) : (\n          <CollaborationRoom\n            user={user}\n            roomId={roomId}\n            socket={socket}\n            onLeaveRoom={handleLeaveRoom}\n            showToast={showToast}\n          />\n        )}\n      </div>\n\n      {/* Toast notifications */}\n      {toast && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={() => setToast(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}